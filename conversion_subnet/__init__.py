# ------------------------------------------------------------------------- #
# Single‑source version string
# ------------------------------------------------------------------------- #
# __version__ = "0.0.0"
# version_split = __version__.split(".")
# __spec_version__ = (
#     (1000 * int(version_split[0]))
#     + (10 * int(version_split[1]))
#     + (1 * int(version_split[2]))
# )


# # Import all submodules.
# from . import protocol
# from . import base
# from . import validator
# from . import utils
# ------------------------------------------------------------------------- #
# OLD CODE
# ------------------------------------------------------------------------- #
"""
conversion_subnet
=================

Real‑time Conversation Analytics **Bittensor** subnet
-----------------------------------------------------

This package contains:

* `ConversionSynapse`  –  protocol definition exchanged between miners/validators
* `BinaryClassificationMiner` – reference miner (MLP‑based)
* `BaseValidator`      – scoring / incentive logic for the subnet
* Utility helpers in `conversion_subnet.utils.*`

The file is also the **single authoritative source** for the package
version.  At runtime we attempt to look up the version installed via
import‑lib metadata; when running from source (editable mode) we fall back
to an internal constant.

Typical usage
-------------
>>> import conversion_subnet as cs
>>> print(cs.__version__)
'0.1.0'
"""

from __future__ import annotations

# ------------------------------------------------------------------------- #
# Single‑source version string
# ------------------------------------------------------------------------- #
try:
    # When installed as a wheel, importlib will find the version in
    # the package metadata generated by setup.py / pyproject.toml.
    from importlib.metadata import version, PackageNotFoundError  # py>=3.8

    __version__: str = version(__name__)  # type: ignore[arg-type]

except PackageNotFoundError:  # running from source‑tree or editable mode
    __version__ = "0.1.0"

# Calculate spec version from version string
version_split = __version__.split(".")
__spec_version__ = (
    (1000 * int(version_split[0]))
    + (10 * int(version_split[1]))
    + (1 * int(version_split[2]))
)

# ------------------------------------------------------------------------- #
# Public re‑exports (optional, keep the surface small)
# ------------------------------------------------------------------------- #
# A light re‑export so users can do:
#    from conversion_subnet import ConversionSynapse, BinaryClassificationMiner
#
# Feel free to comment out or extend based on what you wish to expose.

from .protocol import ConversionSynapse  # noqa: F401
from .miner.miner import BinaryClassificationMiner  # noqa: F401
from .validator.reward import Validator as BaseValidator  # noqa: F401

__all__: list[str] = [
    "__version__",
    "__spec_version__",
    "ConversionSynapse",
    "BinaryClassificationMiner",
    "BaseValidator",
]

# ------------------------------------------------------------------------- #
# End of file
# ------------------------------------------------------------------------- #
