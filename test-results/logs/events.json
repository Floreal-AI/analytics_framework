{"text": "2025-05-03 15:41:17.545 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.744396", "seconds": 0.744396}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 28058, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:41:17.545834+05:30", "timestamp": 1746267077.545834}}}
{"text": "2025-05-03 15:41:18.173 | ERROR    | conversion_subnet.utils.log:error:130 - Missing required features: ['session_id']\n", "record": {"elapsed": {"repr": "0:00:01.372477", "seconds": 1.372477}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Missing required features: ['session_id']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 28058, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:41:18.173915+05:30", "timestamp": 1746267078.173915}}}
{"text": "2025-05-03 15:41:18.175 | ERROR    | conversion_subnet.utils.log:error:130 - Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']\n", "record": {"elapsed": {"repr": "0:00:01.374288", "seconds": 1.374288}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 28058, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:41:18.175726+05:30", "timestamp": 1746267078.175726}}}
{"text": "2025-05-03 15:41:18.178 | WARNING  | conversion_subnet.utils.log:warning:124 - Feature hour_of_day could not be converted to float\n", "record": {"elapsed": {"repr": "0:00:01.376899", "seconds": 1.376899}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "warning", "level": {"icon": "⚠️", "name": "WARNING", "no": 30}, "line": 124, "message": "Feature hour_of_day could not be converted to float", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 28058, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:41:18.178337+05:30", "timestamp": 1746267078.178337}}}
{"text": "2025-05-03 15:41:18.484 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:01.683046", "seconds": 1.683046}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 28058, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:41:18.484484+05:30", "timestamp": 1746267078.484484}}}
{"text": "2025-05-03 15:41:19.029 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:02.227758", "seconds": 2.227758}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 35, "failed": 8, "skipped": 0, "errors": 9}, "duration": 1.6738708019256592, "failed_tests": [{"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_init", "duration": 0.00017870799638330936, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x13617a140>\ntest_config = ConversionSubnetConfig(miner=MinerConfig(device='cpu', input_size=40, hidden_sizes=[64, 32, 1], learning_rate=0.001, b...console_logging=True), netuid=1, subtensor_chain='finney', config_path=PosixPath('/Users/admin/.bittensor/config.yml'))\n\n    def test_init(self, test_config):\n        \"\"\"Test that the miner initializes correctly.\"\"\"\n>       miner = BinaryClassificationMiner(test_config)\n\ntests/unit/miner/test_miner.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/miner.py:18: in __init__\n    self.device = torch.device(config.neuron.device)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = ConversionSubnetConfig(miner=MinerConfig(device='cpu', input_size=40, hidden_sizes=[64, 32, 1], learning_rate=0.001, b...console_logging=True), netuid=1, subtensor_chain='finney', config_path=PosixPath('/Users/admin/.bittensor/config.yml'))\nitem = 'neuron'\n\n    def __getattr__(self, item: str) -> Any:\n        private_attributes = object.__getattribute__(self, '__private_attributes__')\n        if item in private_attributes:\n            attribute = private_attributes[item]\n            if hasattr(attribute, '__get__'):\n                return attribute.__get__(self, type(self))  # type: ignore\n    \n            try:\n                # Note: self.__pydantic_private__ cannot be None if self.__private_attributes__ has items\n                return self.__pydantic_private__[item]  # type: ignore\n            except KeyError as exc:\n                raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n        else:\n            # `__pydantic_extra__` can fail to be set if the model is not yet fully initialized.\n            # See `BaseModel.__repr_args__` for more details\n            try:\n                pydantic_extra = object.__getattribute__(self, '__pydantic_extra__')\n            except AttributeError:\n                pydantic_extra = None\n    \n            if pydantic_extra:\n                try:\n                    return pydantic_extra[item]\n                except KeyError as exc:\n                    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n            else:\n                if hasattr(self.__class__, item):\n                    return super().__getattribute__(item)  # Raises AttributeError if appropriate\n                else:\n                    # this is the current error\n>                   raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE                   AttributeError: 'ConversionSubnetConfig' object has no attribute 'neuron'\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pydantic/main.py:989: AttributeError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_model_architecture", "duration": 0.0001723750028759241, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x13617b0a0>\ntest_config = ConversionSubnetConfig(miner=MinerConfig(device='cpu', input_size=40, hidden_sizes=[32, 16, 1], learning_rate=0.001, b...console_logging=True), netuid=1, subtensor_chain='finney', config_path=PosixPath('/Users/admin/.bittensor/config.yml'))\n\n    def test_model_architecture(self, test_config):\n        \"\"\"Test that the model architecture matches the configuration.\"\"\"\n        # Set custom layer sizes\n        test_config.miner.hidden_sizes = [32, 16, 1]\n    \n>       miner = BinaryClassificationMiner(test_config)\n\ntests/unit/miner/test_miner.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/miner.py:18: in __init__\n    self.device = torch.device(config.neuron.device)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = ConversionSubnetConfig(miner=MinerConfig(device='cpu', input_size=40, hidden_sizes=[32, 16, 1], learning_rate=0.001, b...console_logging=True), netuid=1, subtensor_chain='finney', config_path=PosixPath('/Users/admin/.bittensor/config.yml'))\nitem = 'neuron'\n\n    def __getattr__(self, item: str) -> Any:\n        private_attributes = object.__getattribute__(self, '__private_attributes__')\n        if item in private_attributes:\n            attribute = private_attributes[item]\n            if hasattr(attribute, '__get__'):\n                return attribute.__get__(self, type(self))  # type: ignore\n    \n            try:\n                # Note: self.__pydantic_private__ cannot be None if self.__private_attributes__ has items\n                return self.__pydantic_private__[item]  # type: ignore\n            except KeyError as exc:\n                raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n        else:\n            # `__pydantic_extra__` can fail to be set if the model is not yet fully initialized.\n            # See `BaseModel.__repr_args__` for more details\n            try:\n                pydantic_extra = object.__getattribute__(self, '__pydantic_extra__')\n            except AttributeError:\n                pydantic_extra = None\n    \n            if pydantic_extra:\n                try:\n                    return pydantic_extra[item]\n                except KeyError as exc:\n                    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n            else:\n                if hasattr(self.__class__, item):\n                    return super().__getattribute__(item)  # Raises AttributeError if appropriate\n                else:\n                    # this is the current error\n>                   raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE                   AttributeError: 'ConversionSubnetConfig' object has no attribute 'neuron'\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pydantic/main.py:989: AttributeError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_model_device", "duration": 0.00031799999851500615, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x13617a440>\ntest_config = ConversionSubnetConfig(miner=MinerConfig(device='cpu', input_size=40, hidden_sizes=[64, 32, 1], learning_rate=0.001, b...console_logging=True), netuid=1, subtensor_chain='finney', config_path=PosixPath('/Users/admin/.bittensor/config.yml'))\n\n    def test_model_device(self, test_config):\n        \"\"\"Test that the model is on the correct device.\"\"\"\n        test_config.miner.device = \"cpu\"\n>       miner = BinaryClassificationMiner(test_config)\n\ntests/unit/miner/test_miner.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/miner.py:18: in __init__\n    self.device = torch.device(config.neuron.device)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = ConversionSubnetConfig(miner=MinerConfig(device='cpu', input_size=40, hidden_sizes=[64, 32, 1], learning_rate=0.001, b...console_logging=True), netuid=1, subtensor_chain='finney', config_path=PosixPath('/Users/admin/.bittensor/config.yml'))\nitem = 'neuron'\n\n    def __getattr__(self, item: str) -> Any:\n        private_attributes = object.__getattribute__(self, '__private_attributes__')\n        if item in private_attributes:\n            attribute = private_attributes[item]\n            if hasattr(attribute, '__get__'):\n                return attribute.__get__(self, type(self))  # type: ignore\n    \n            try:\n                # Note: self.__pydantic_private__ cannot be None if self.__private_attributes__ has items\n                return self.__pydantic_private__[item]  # type: ignore\n            except KeyError as exc:\n                raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n        else:\n            # `__pydantic_extra__` can fail to be set if the model is not yet fully initialized.\n            # See `BaseModel.__repr_args__` for more details\n            try:\n                pydantic_extra = object.__getattribute__(self, '__pydantic_extra__')\n            except AttributeError:\n                pydantic_extra = None\n    \n            if pydantic_extra:\n                try:\n                    return pydantic_extra[item]\n                except KeyError as exc:\n                    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n            else:\n                if hasattr(self.__class__, item):\n                    return super().__getattribute__(item)  # Raises AttributeError if appropriate\n                else:\n                    # this is the current error\n>                   raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE                   AttributeError: 'ConversionSubnetConfig' object has no attribute 'neuron'\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pydantic/main.py:989: AttributeError"}, {"name": "tests/unit/utils/test_configuration.py::TestConfiguration::test_load_config_from_env", "duration": 0.0038229580022743903, "error_message": "self = <test_configuration.TestConfiguration object at 0x13617b190>\n\n    @patch.dict(os.environ, {\"CONVERSION_NETUID\": \"4\", \"CONVERSION_MINER__DEVICE\": \"cuda\"})\n    def test_load_config_from_env(self):\n        \"\"\"Test loading config from environment variables.\"\"\"\n        # Load config (should use env vars)\n        config = load_config()\n    \n        # Check that values were loaded from env vars\n>       assert config.netuid == 4\nE       AssertionError: assert 1 == 4\nE        +  where 1 = ConversionSubnetConfig(miner=MinerConfig(device='cpu', input_size=40, hidden_sizes=[64, 32, 1], learning_rate=0.001, batch_size=32, epochs=10, checkpoint_dir=PosixPath('/Users/admin/.bittensor/checkpoints'), timeout=60), validator=ValidatorConfig(sample_size=10, ema_beta=0.1, dataset_path=None, timeout=60, epoch_length=100, num_concurrent_forwards=1), logging=LoggingConfig(level='INFO', log_dir=None, json_logging=True, console_logging=True), netuid=1, subtensor_chain='finney', config_path=PosixPath('/Users/admin/.bittensor/config.yml')).netuid\n\ntests/unit/utils/test_configuration.py:118: AssertionError"}, {"name": "tests/unit/utils/test_configuration.py::TestConfiguration::test_load_config_priority", "duration": 0.002009832998737693, "error_message": "self = <test_configuration.TestConfiguration object at 0x136178e80>\ntmp_path = PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-1/test_load_config_priority0')\n\n    def test_load_config_priority(self, tmp_path):\n        \"\"\"Test config loading priority (env vars > YAML > defaults).\"\"\"\n        # Create a test config file\n        config_data = {\n            \"netuid\": 3,\n            \"miner\": {\n                \"device\": \"cuda\",\n                \"input_size\": 50\n            }\n        }\n    \n        config_path = tmp_path / \"test_config.yml\"\n        with open(config_path, 'w') as f:\n            yaml.dump(config_data, f)\n    \n        # Set environment variables\n        with patch.dict(os.environ, {\"CONVERSION_NETUID\": \"4\"}):\n            # Load config\n            config = load_config(config_path)\n    \n            # Env vars should take precedence over YAML\n>           assert config.netuid == 4\nE           AssertionError: assert 3 == 4\nE            +  where 3 = ConversionSubnetConfig(miner=MinerConfig(device='cuda', input_size=50, hidden_sizes=[64, 32, 1], learning_rate=0.001, batch_size=32, epochs=10, checkpoint_dir=PosixPath('/Users/admin/.bittensor/checkpoints'), timeout=60), validator=ValidatorConfig(sample_size=10, ema_beta=0.1, dataset_path=None, timeout=60, epoch_length=100, num_concurrent_forwards=1), logging=LoggingConfig(level='INFO', log_dir=None, json_logging=True, console_logging=True), netuid=3, subtensor_chain='finney', config_path=PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-1/test_load_config_priority0/test_config.yml')).netuid\n\ntests/unit/utils/test_configuration.py:145: AssertionError"}, {"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.0006027499985066243, "error_message": "self = <Coroutine test_forward>\n\n    def runtest(self) -> None:\n        self.obj = wrap_in_sync(\n            # https://github.com/pytest-dev/pytest-asyncio/issues/596\n            self.obj,  # type: ignore[has-type]\n        )\n>       super().runtest()\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pytest_asyncio/plugin.py:549: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pytest_asyncio/plugin.py:1069: in inner\n    _loop.run_until_complete(task)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/asyncio/base_events.py:649: in run_until_complete\n    return future.result()\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1393: in patched\n    with self.decoration_helper(patched,\n../../../../.pyenv/versions/3.10.15/lib/python3.10/contextlib.py:135: in __enter__\n    return next(self.gen)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1358: in decoration_helper\n    arg = exit_stack.enter_context(patching)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/contextlib.py:492: in enter_context\n    result = _cm_type.__enter__(cm)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x1362ba230>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x133d848b0> does not have the attribute 'validate_features'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}, {"name": "tests/unit/validator/test_reward.py::TestValidator::test_diversity_reward", "duration": 0.0002548749980633147, "error_message": "self = <test_reward.TestValidator object at 0x1364397e0>\n\n    def test_diversity_reward(self):\n        \"\"\"Test diversity reward calculation.\"\"\"\n        validator = Validator()\n    \n        # Conservative prediction (0.5) should have 0 diversity reward\n>       assert validator.diversity_reward(0.5) == 0.0\nE       assert 1.0 == 0.0\nE        +  where 1.0 = diversity_reward(0.5)\nE        +    where diversity_reward = <conversion_subnet.validator.reward.Validator object at 0x137b1afb0>.diversity_reward\n\ntests/unit/validator/test_reward.py:107: AssertionError"}, {"name": "tests/unit/validator/test_reward.py::TestValidator::test_reward_full_flow", "duration": 0.0011672500040731393, "error_message": "self = <test_reward.TestValidator object at 0x13643be50>\nmock_log_metrics = <MagicMock name='log_metrics' id='5226443392'>\n\n    @patch('conversion_subnet.validator.utils.log_metrics')\n    def test_reward_full_flow(self, mock_log_metrics):\n        \"\"\"Test the full reward flow for a miner's response.\"\"\"\n        validator = Validator()\n    \n        # Create a sample response\n        response = MagicMock(spec=ConversionSynapse)\n        response.prediction = {'conversion_happened': 1, 'time_to_conversion_seconds': 70.0}\n        response.confidence = 0.8\n        response.response_time = 15.0\n        response.miner_uid = 42\n    \n        # Create sample ground truth\n        true = {'conversion_happened': 1, 'time_to_conversion_seconds': 65.0}\n    \n        # Calculate reward\n        reward = validator.reward(true, response)\n    \n        # Check that reward is calculated correctly\n        assert 0.0 <= reward <= 1.0\n    \n        # Check that EMA is updated\n        assert 42 in validator.ema_scores\n    \n        # Check that ground truth is stored\n        assert true in validator.ground_truth_history\n    \n        # Check that log_metrics is called\n>       mock_log_metrics.assert_called_once_with(response, reward, true)\n\ntests/unit/validator/test_reward.py:253: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MagicMock name='log_metrics' id='5226443392'>\nargs = (<MagicMock spec='ConversionSynapse' id='5226436144'>, 0.5576666666666666, {'conversion_happened': 1, 'time_to_conversion_seconds': 65.0})\nkwargs = {}, msg = \"Expected 'log_metrics' to be called once. Called 0 times.\"\n\n    def assert_called_once_with(self, /, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.%s\"\n                   % (self._mock_name or 'mock',\n                      self.call_count,\n                      self._calls_repr()))\n>           raise AssertionError(msg)\nE           AssertionError: Expected 'log_metrics' to be called once. Called 0 times.\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:940: AssertionError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 28058, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:41:19.029196+05:30", "timestamp": 1746267079.029196}}}
{"text": "2025-05-03 15:41:19.096 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:02.295280", "seconds": 2.29528}, "exception": null, "extra": {"passed": 35, "failed": 8, "skipped": 0, "error": 9}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 28058, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:41:19.096718+05:30", "timestamp": 1746267079.096718}}}
{"text": "2025-05-03 15:46:58.262 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.648981", "seconds": 0.648981}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.262626+05:30", "timestamp": 1746267418.262626}}}
{"text": "2025-05-03 15:46:58.274 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.661181", "seconds": 0.661181}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.274826+05:30", "timestamp": 1746267418.274826}}}
{"text": "2025-05-03 15:46:58.403 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.790165", "seconds": 0.790165}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.403810+05:30", "timestamp": 1746267418.40381}}}
{"text": "2025-05-03 15:46:58.453 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.839500", "seconds": 0.8395}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.453145+05:30", "timestamp": 1746267418.453145}}}
{"text": "2025-05-03 15:46:58.529 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.915719", "seconds": 0.915719}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.529364+05:30", "timestamp": 1746267418.529364}}}
{"text": "2025-05-03 15:46:58.534 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.921208", "seconds": 0.921208}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.534853+05:30", "timestamp": 1746267418.534853}}}
{"text": "2025-05-03 15:46:58.539 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.925867", "seconds": 0.925867}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.539512+05:30", "timestamp": 1746267418.539512}}}
{"text": "2025-05-03 15:46:58.544 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.930372", "seconds": 0.930372}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.544017+05:30", "timestamp": 1746267418.544017}}}
{"text": "2025-05-03 15:46:58.552 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.938680", "seconds": 0.93868}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.552325+05:30", "timestamp": 1746267418.552325}}}
{"text": "2025-05-03 15:46:58.553 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.939904", "seconds": 0.939904}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.553549+05:30", "timestamp": 1746267418.553549}}}
{"text": "2025-05-03 15:46:58.561 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.947781", "seconds": 0.947781}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.561426+05:30", "timestamp": 1746267418.561426}}}
{"text": "2025-05-03 15:46:58.562 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.948795", "seconds": 0.948795}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.562440+05:30", "timestamp": 1746267418.56244}}}
{"text": "2025-05-03 15:46:58.567 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.953838", "seconds": 0.953838}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.567483+05:30", "timestamp": 1746267418.567483}}}
{"text": "2025-05-03 15:46:58.611 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.997601", "seconds": 0.997601}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.611246+05:30", "timestamp": 1746267418.611246}}}
{"text": "2025-05-03 15:46:58.648 | INFO     | conversion_subnet.utils.log:info:112 - Epoch 1/1 - train_loss: 0.8496, train_acc: 0.0000, val_loss: 0.8496, val_acc: 0.0000\n", "record": {"elapsed": {"repr": "0:00:01.034541", "seconds": 1.034541}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Epoch 1/1 - train_loss: 0.8496, train_acc: 0.0000, val_loss: 0.8496, val_acc: 0.0000", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.648186+05:30", "timestamp": 1746267418.648186}}}
{"text": "2025-05-03 15:46:58.661 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:01.047591", "seconds": 1.047591}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.661236+05:30", "timestamp": 1746267418.661236}}}
{"text": "2025-05-03 15:46:58.666 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-2/test_save_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:01.052363", "seconds": 1.052363}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-2/test_save_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.666008+05:30", "timestamp": 1746267418.666008}}}
{"text": "2025-05-03 15:46:58.676 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:01.062885", "seconds": 1.062885}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.676530+05:30", "timestamp": 1746267418.67653}}}
{"text": "2025-05-03 15:46:58.678 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-2/test_load_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:01.064656", "seconds": 1.064656}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-2/test_load_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.678301+05:30", "timestamp": 1746267418.678301}}}
{"text": "2025-05-03 15:46:58.680 | INFO     | conversion_subnet.utils.log:info:112 - Loaded model checkpoint from /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-2/test_load_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:01.066958", "seconds": 1.066958}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Loaded model checkpoint from /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-2/test_load_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.680603+05:30", "timestamp": 1746267418.680603}}}
{"text": "2025-05-03 15:46:58.708 | ERROR    | conversion_subnet.utils.log:error:130 - Missing required features: ['session_id']\n", "record": {"elapsed": {"repr": "0:00:01.094926", "seconds": 1.094926}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Missing required features: ['session_id']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.708571+05:30", "timestamp": 1746267418.708571}}}
{"text": "2025-05-03 15:46:58.710 | ERROR    | conversion_subnet.utils.log:error:130 - Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']\n", "record": {"elapsed": {"repr": "0:00:01.096534", "seconds": 1.096534}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.710179+05:30", "timestamp": 1746267418.710179}}}
{"text": "2025-05-03 15:46:58.712 | WARNING  | conversion_subnet.utils.log:warning:124 - Feature hour_of_day could not be converted to float\n", "record": {"elapsed": {"repr": "0:00:01.098675", "seconds": 1.098675}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "warning", "level": {"icon": "⚠️", "name": "WARNING", "no": 30}, "line": 124, "message": "Feature hour_of_day could not be converted to float", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:58.712320+05:30", "timestamp": 1746267418.71232}}}
{"text": "2025-05-03 15:46:59.012 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:01.398478", "seconds": 1.398478}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:59.012123+05:30", "timestamp": 1746267419.012123}}}
{"text": "2025-05-03 15:46:59.440 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.826980", "seconds": 1.82698}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 41, "failed": 11, "skipped": 0, "errors": 0}, "duration": 1.3612258434295654, "failed_tests": [{"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_miner_response_to_validator", "duration": 0.0020032079992233776, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x1291c5900>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x12930b610>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_miner_response_to_validator(self, mock_miner, sample_features):\n        \"\"\"Test that miner can process features and return valid response.\"\"\"\n        # Create a sample synapse with features\n        synapse = ConversionSynapse(features=sample_features)\n    \n        # Add required dendrite property for blacklist\n>       synapse.dendrite = MagicMock()\n\ntests/integration/test_miner_validator.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/bittensor/core/synapse.py:503: in __setattr__\n    super().__setattr__(name, value)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pydantic/main.py:996: in __setattr__\n    setattr_handler(self, name, value)  # call here to not memo on possibly unknown fields\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmodel = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\nname = 'dendrite', val = <MagicMock id='4986020976'>\n\n>       'validate_assignment': lambda model, name, val: model.__pydantic_validator__.validate_assignment(model, name, val),  # pyright: ignore[reportAssignmentType]\n        'private': _private_setattr_handler,\n        'cached_property': lambda model, name, val: model.__dict__.__setitem__(name, val),\n        'extra_known': lambda model, name, val: _object_setattr(model, name, val),\n    }\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for ConversionSynapse\nE   dendrite\nE     Input should be a valid dictionary or instance of TerminalInfo [type=model_type, input_value=<MagicMock id='4986020976'>, input_type=MagicMock]\nE       For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pydantic/main.py:114: ValidationError"}, {"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_validator_evaluation_of_miner_response", "duration": 0.0006880420041852631, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x1291c5c30>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x129203fd0>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_validator_evaluation_of_miner_response(self, mock_miner, sample_features):\n        \"\"\"Test that validator can evaluate miner responses correctly.\"\"\"\n        # Create a sample synapse with features\n        synapse = ConversionSynapse(features=sample_features)\n    \n        # Add required dendrite property for blacklist\n>       synapse.dendrite = MagicMock()\n\ntests/integration/test_miner_validator.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/bittensor/core/synapse.py:503: in __setattr__\n    super().__setattr__(name, value)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pydantic/main.py:996: in __setattr__\n    setattr_handler(self, name, value)  # call here to not memo on possibly unknown fields\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmodel = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\nname = 'dendrite', val = <MagicMock id='4984939440'>\n\n>       'validate_assignment': lambda model, name, val: model.__pydantic_validator__.validate_assignment(model, name, val),  # pyright: ignore[reportAssignmentType]\n        'private': _private_setattr_handler,\n        'cached_property': lambda model, name, val: model.__dict__.__setitem__(name, val),\n        'extra_known': lambda model, name, val: _object_setattr(model, name, val),\n    }\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for ConversionSynapse\nE   dendrite\nE     Input should be a valid dictionary or instance of TerminalInfo [type=model_type, input_value=<MagicMock id='4984939440'>, input_type=MagicMock]\nE       For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pydantic/main.py:114: ValidationError"}, {"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_miner_validator_end_to_end", "duration": 0.001782499995897524, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x1291c5960>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1292f5750>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_miner_validator_end_to_end(self, mock_miner, sample_features):\n        \"\"\"Test end-to-end flow from validator query to miner to reward calculation.\"\"\"\n        # Create a mock validator with dendrite\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n    \n        # Mock get_random_uids to return [0]\n>       with patch('conversion_subnet.validator.forward.get_random_uids', return_value=[0]):\n\ntests/integration/test_miner_validator.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x12924e8c0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x10e2848b0> does not have the attribute 'get_random_uids'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward", "duration": 0.0047307909990195185, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x1291c7b80>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1293deb30>\nsample_synapse = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward(self, mock_miner, sample_synapse):\n        \"\"\"Test the forward method returns the expected output structure.\"\"\"\n        # Mock the model output\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.7])):\n            result = mock_miner.forward(sample_synapse)\n    \n            # Check result structure\n            assert 'conversion_happened' in result\n            assert 'time_to_conversion_seconds' in result\n>           assert 'confidence' in result\nE           AssertionError: assert 'confidence' in {'conversion_happened': 0, 'time_to_conversion_seconds': -1.0}\n\ntests/unit/miner/test_miner.py:54: AssertionError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward_negative_case", "duration": 0.001012041000649333, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x1291c7e50>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1293746a0>\nsample_synapse = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward_negative_case(self, mock_miner, sample_synapse):\n        \"\"\"Test the forward method with a negative prediction.\"\"\"\n        # Mock the model output for negative case\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.3])):\n            result = mock_miner.forward(sample_synapse)\n    \n            assert result['conversion_happened'] == 0  # 0.3 rounded down\n            assert result['time_to_conversion_seconds'] == -1.0  # Negative for no conversion\n>           assert result['confidence'] == 0.3\nE           KeyError: 'confidence'\n\ntests/unit/miner/test_miner.py:69: KeyError"}, {"name": "tests/unit/miner/test_train.py::TestModelTraining::test_train_model", "duration": 0.037039250004454516, "error_message": "self = <test_train.TestModelTraining object at 0x129202500>\nmock_adam = <MagicMock name='Adam' id='4986460464'>\nmock_dataloader = <MagicMock name='DataLoader' id='4986894848'>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1293748b0>\nsample_dataset = (array([[0.02058449, 0.96990985, 0.83244264, 0.21233911, 0.18182497,\n        0.18340451, 0.30424224, 0.52475643, 0.431...3200496 ,\n        0.89552323, 0.38920168, 0.01083765, 0.90538198, 0.09128668]]), array([0, 1, 1, 0, 1, 1, 0, 1, 0, 1]))\n\n    @patch('torch.utils.data.DataLoader')\n    @patch('torch.optim.Adam')\n    def test_train_model(self, mock_adam, mock_dataloader, mock_miner, sample_dataset):\n        \"\"\"Test train_model function.\"\"\"\n        X_train, y_train = sample_dataset\n        X_val, y_val = sample_dataset  # Reuse for validation\n    \n        # Mock DataLoader instances\n        mock_train_loader = MagicMock()\n        mock_val_loader = MagicMock()\n        mock_dataloader.side_effect = [mock_train_loader, mock_val_loader]\n    \n        # Mock optimizer\n        mock_optimizer = MagicMock()\n        mock_adam.return_value = mock_optimizer\n    \n        # Configure mock_train_loader to yield sample data\n        sample_batch = (torch.randn(4, 40), torch.randint(0, 2, (4,)).float())\n        mock_train_loader.__iter__.return_value = [sample_batch]\n        mock_train_loader.__len__.return_value = 1\n    \n        # Configure mock_val_loader to yield sample data\n        mock_val_loader.__iter__.return_value = [sample_batch]\n        mock_val_loader.__len__.return_value = 1\n    \n        # Call train_model\n        history = train_model(\n            miner=mock_miner,\n            X_train=X_train,\n            y_train=y_train,\n            X_val=X_val,\n            y_val=y_val,\n            epochs=1,\n            batch_size=4,\n            learning_rate=0.001,\n            device=\"cpu\"\n        )\n    \n        # Check that optimizer and DataLoader were created correctly\n        mock_adam.assert_called_once()\n        assert mock_dataloader.call_count == 2\n    \n        # Check that the model was put in train mode\n>       mock_miner.model.train.assert_called_once()\nE       AttributeError: 'function' object has no attribute 'assert_called_once'\n\ntests/unit/miner/test_train.py:159: AttributeError"}, {"name": "tests/unit/miner/test_train.py::TestModelTraining::test_save_model", "duration": 0.004306875001930166, "error_message": "self = <test_train.TestModelTraining object at 0x129202800>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1294afd30>\ntmp_checkpoint_dir = PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-2/test_save_model0/checkpoints')\n\n    def test_save_model(self, mock_miner, tmp_checkpoint_dir):\n        \"\"\"Test save_model function.\"\"\"\n        # Call save_model\n        save_model(mock_miner, tmp_checkpoint_dir, \"test_model.pt\")\n    \n        # Check that the file was created\n        assert (tmp_checkpoint_dir / \"test_model.pt\").exists()\n    \n        # Check that torch.save was called with the correct arguments\n>       mock_miner.model.state_dict.assert_called_once()\nE       AttributeError: 'function' object has no attribute 'assert_called_once'\n\ntests/unit/miner/test_train.py:179: AttributeError"}, {"name": "tests/unit/miner/test_train.py::TestModelTraining::test_load_model", "duration": 0.0034033749980153516, "error_message": "self = <test_train.TestModelTraining object at 0x129202b00>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1293bf6a0>\ntmp_checkpoint_dir = PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-2/test_load_model0/checkpoints')\n\n    def test_load_model(self, mock_miner, tmp_checkpoint_dir):\n        \"\"\"Test load_model function.\"\"\"\n        # Save a model first\n        save_model(mock_miner, tmp_checkpoint_dir, \"test_model.pt\")\n    \n        # Call load_model\n        load_model(mock_miner, tmp_checkpoint_dir / \"test_model.pt\")\n    \n        # Check that model.load_state_dict was called\n>       mock_miner.model.load_state_dict.assert_called_once()\nE       AttributeError: 'function' object has no attribute 'assert_called_once'\n\ntests/unit/miner/test_train.py:190: AttributeError"}, {"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.0009480829976382665, "error_message": "self = <Coroutine test_forward>\n\n    def runtest(self) -> None:\n        self.obj = wrap_in_sync(\n            # https://github.com/pytest-dev/pytest-asyncio/issues/596\n            self.obj,  # type: ignore[has-type]\n        )\n>       super().runtest()\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pytest_asyncio/plugin.py:549: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pytest_asyncio/plugin.py:1069: in inner\n    _loop.run_until_complete(task)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/asyncio/base_events.py:649: in run_until_complete\n    return future.result()\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1393: in patched\n    with self.decoration_helper(patched,\n../../../../.pyenv/versions/3.10.15/lib/python3.10/contextlib.py:135: in __enter__\n    return next(self.gen)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1358: in decoration_helper\n    arg = exit_stack.enter_context(patching)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/contextlib.py:492: in enter_context\n    result = _cm_type.__enter__(cm)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x1293130d0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x10e2848b0> does not have the attribute 'generate_conversation'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}, {"name": "tests/unit/validator/test_reward.py::TestValidator::test_diversity_reward", "duration": 0.0002892499978770502, "error_message": "self = <test_reward.TestValidator object at 0x1293088e0>\n\n    def test_diversity_reward(self):\n        \"\"\"Test diversity reward calculation.\"\"\"\n        validator = Validator()\n    \n        # Conservative prediction (0.5) should have 0 diversity reward\n>       assert validator.diversity_reward(0.5) == 0.0\nE       assert 0.5 == 0.0\nE        +  where 0.5 = diversity_reward(0.5)\nE        +    where diversity_reward = <conversion_subnet.validator.reward.Validator object at 0x129228af0>.diversity_reward\n\ntests/unit/validator/test_reward.py:107: AssertionError"}, {"name": "tests/unit/validator/test_reward.py::TestValidator::test_reward_full_flow", "duration": 0.001134749996708706, "error_message": "self = <test_reward.TestValidator object at 0x129308e50>\nmock_log_metrics = <MagicMock name='log_metrics' id='4986888656'>\n\n    @patch('conversion_subnet.validator.utils.log_metrics')\n    def test_reward_full_flow(self, mock_log_metrics):\n        \"\"\"Test the full reward flow for a miner's response.\"\"\"\n        validator = Validator()\n    \n        # Create a sample response\n        response = MagicMock(spec=ConversionSynapse)\n        response.prediction = {'conversion_happened': 1, 'time_to_conversion_seconds': 70.0}\n        response.confidence = 0.8\n        response.response_time = 15.0\n        response.miner_uid = 42\n    \n        # Create sample ground truth\n        true = {'conversion_happened': 1, 'time_to_conversion_seconds': 65.0}\n    \n        # Calculate reward\n        reward = validator.reward(true, response)\n    \n        # Check that reward is calculated correctly\n        assert 0.0 <= reward <= 1.0\n    \n        # Check that EMA is updated\n        assert 42 in validator.ema_scores\n    \n        # Check that ground truth is stored\n        assert true in validator.ground_truth_history\n    \n        # Check that log_metrics is called\n>       mock_log_metrics.assert_called_once_with(response, reward, true)\n\ntests/unit/validator/test_reward.py:253: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MagicMock name='log_metrics' id='4986888656'>\nargs = (<MagicMock spec='ConversionSynapse' id='4986790928'>, 0.5176666666666667, {'conversion_happened': 1, 'time_to_conversion_seconds': 65.0})\nkwargs = {}, msg = \"Expected 'log_metrics' to be called once. Called 0 times.\"\n\n    def assert_called_once_with(self, /, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.%s\"\n                   % (self._mock_name or 'mock',\n                      self.call_count,\n                      self._calls_repr()))\n>           raise AssertionError(msg)\nE           AssertionError: Expected 'log_metrics' to be called once. Called 0 times.\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:940: AssertionError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:59.440625+05:30", "timestamp": 1746267419.440625}}}
{"text": "2025-05-03 15:46:59.488 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.874993", "seconds": 1.874993}, "exception": null, "extra": {"passed": 41, "failed": 11, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29097, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:46:59.488638+05:30", "timestamp": 1746267419.488638}}}
{"text": "2025-05-03 15:49:25.127 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.634423", "seconds": 0.634423}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.127469+05:30", "timestamp": 1746267565.127469}}}
{"text": "2025-05-03 15:49:25.137 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.644354", "seconds": 0.644354}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.137400+05:30", "timestamp": 1746267565.1374}}}
{"text": "2025-05-03 15:49:25.141 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.648550", "seconds": 0.64855}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.141596+05:30", "timestamp": 1746267565.141596}}}
{"text": "2025-05-03 15:49:25.226 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.733676", "seconds": 0.733676}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.226722+05:30", "timestamp": 1746267565.226722}}}
{"text": "2025-05-03 15:49:25.228 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.735494", "seconds": 0.735494}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.228540+05:30", "timestamp": 1746267565.22854}}}
{"text": "2025-05-03 15:49:25.237 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.744051", "seconds": 0.744051}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.237097+05:30", "timestamp": 1746267565.237097}}}
{"text": "2025-05-03 15:49:25.311 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.818924", "seconds": 0.818924}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.311970+05:30", "timestamp": 1746267565.31197}}}
{"text": "2025-05-03 15:49:25.316 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.823700", "seconds": 0.8237}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.316746+05:30", "timestamp": 1746267565.316746}}}
{"text": "2025-05-03 15:49:25.321 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.828246", "seconds": 0.828246}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.321292+05:30", "timestamp": 1746267565.321292}}}
{"text": "2025-05-03 15:49:25.322 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.829247", "seconds": 0.829247}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.322293+05:30", "timestamp": 1746267565.322293}}}
{"text": "2025-05-03 15:49:25.330 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.837559", "seconds": 0.837559}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.330605+05:30", "timestamp": 1746267565.330605}}}
{"text": "2025-05-03 15:49:25.331 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.838666", "seconds": 0.838666}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.331712+05:30", "timestamp": 1746267565.331712}}}
{"text": "2025-05-03 15:49:25.339 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.846794", "seconds": 0.846794}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.339840+05:30", "timestamp": 1746267565.33984}}}
{"text": "2025-05-03 15:49:25.340 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.847721", "seconds": 0.847721}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.340767+05:30", "timestamp": 1746267565.340767}}}
{"text": "2025-05-03 15:49:25.348 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.855885", "seconds": 0.855885}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.348931+05:30", "timestamp": 1746267565.348931}}}
{"text": "2025-05-03 15:49:25.584 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-3/test_save_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:01.091209", "seconds": 1.091209}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-3/test_save_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.584255+05:30", "timestamp": 1746267565.584255}}}
{"text": "2025-05-03 15:49:25.587 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-3/test_load_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:01.094089", "seconds": 1.094089}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-3/test_load_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.587135+05:30", "timestamp": 1746267565.587135}}}
{"text": "2025-05-03 15:49:25.719 | ERROR    | conversion_subnet.utils.log:error:130 - Missing required features: ['session_id']\n", "record": {"elapsed": {"repr": "0:00:01.226189", "seconds": 1.226189}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Missing required features: ['session_id']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.719235+05:30", "timestamp": 1746267565.719235}}}
{"text": "2025-05-03 15:49:25.720 | ERROR    | conversion_subnet.utils.log:error:130 - Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']\n", "record": {"elapsed": {"repr": "0:00:01.227721", "seconds": 1.227721}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.720767+05:30", "timestamp": 1746267565.720767}}}
{"text": "2025-05-03 15:49:25.722 | WARNING  | conversion_subnet.utils.log:warning:124 - Feature hour_of_day could not be converted to float\n", "record": {"elapsed": {"repr": "0:00:01.229942", "seconds": 1.229942}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "warning", "level": {"icon": "⚠️", "name": "WARNING", "no": 30}, "line": 124, "message": "Feature hour_of_day could not be converted to float", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.722988+05:30", "timestamp": 1746267565.722988}}}
{"text": "2025-05-03 15:49:25.933 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:01.440827", "seconds": 1.440827}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:25.933873+05:30", "timestamp": 1746267565.933873}}}
{"text": "2025-05-03 15:49:26.347 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.854245", "seconds": 1.854245}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 42, "failed": 10, "skipped": 0, "errors": 0}, "duration": 1.403696060180664, "failed_tests": [{"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_miner_response_to_validator", "duration": 0.0037281250042724423, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x12d009840>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x12d0bfa00>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_miner_response_to_validator(self, mock_miner, sample_features):\n        \"\"\"Test that miner can process features and return valid response.\"\"\"\n        # Create a sample synapse with features\n        synapse = ConversionSynapse(features=sample_features)\n    \n        # Create a mock for the dendrite property\n        mock_dendrite = MagicMock()\n        mock_dendrite.hotkey = \"test_hotkey\"\n    \n        # Patch the synapse directly\n        synapse.__dict__['dendrite'] = mock_dendrite\n    \n        # Mock the metagraph for the miner\n        mock_miner.metagraph = MagicMock()\n        mock_miner.metagraph.hotkeys = [\"test_hotkey\"]\n    \n        # Mock the model output - positive prediction (0.8)\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.8])):\n            # Process synapse\n>           result = await mock_miner.forward(synapse)\nE           TypeError: object dict can't be used in 'await' expression\n\ntests/integration/test_miner_validator.py:41: TypeError"}, {"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_validator_evaluation_of_miner_response", "duration": 0.001611667001270689, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x12d009270>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x12d057700>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_validator_evaluation_of_miner_response(self, mock_miner, sample_features):\n        \"\"\"Test that validator can evaluate miner responses correctly.\"\"\"\n        # Create a sample synapse with features\n        synapse = ConversionSynapse(features=sample_features)\n    \n        # Create a mock for the dendrite property\n        mock_dendrite = MagicMock()\n        mock_dendrite.hotkey = \"test_hotkey\"\n    \n        # Patch the synapse directly\n        synapse.__dict__['dendrite'] = mock_dendrite\n    \n        # Mock the metagraph for the miner\n        mock_miner.metagraph = MagicMock()\n        mock_miner.metagraph.hotkeys = [\"test_hotkey\"]\n    \n        # Generate ground truth\n        ground_truth = generate_ground_truth(sample_features)\n    \n        # Mock the model output\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.8])):\n            # Process synapse with miner\n>           response = await mock_miner.forward(synapse)\nE           TypeError: object dict can't be used in 'await' expression\n\ntests/integration/test_miner_validator.py:76: TypeError"}, {"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_miner_validator_end_to_end", "duration": 0.00228320799942594, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x12d008e80>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x12d1bfdc0>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_miner_validator_end_to_end(self, mock_miner, sample_features):\n        \"\"\"Test end-to-end flow from validator query to miner to reward calculation.\"\"\"\n        # Create a mock validator with dendrite\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n    \n        # Mock get_random_uids to return [0]\n>       with patch('conversion_subnet.validator.forward.get_random_uids', return_value=[0]):\n\ntests/integration/test_miner_validator.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x12d0578b0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x12aa848b0> does not have the attribute 'get_random_uids'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward", "duration": 0.0013791669989586808, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x12d00b610>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x12d078d60>\nsample_synapse = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward(self, mock_miner, sample_synapse):\n        \"\"\"Test the forward method returns the expected output structure.\"\"\"\n        # Mock the model output\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.7])):\n            result = mock_miner.forward(sample_synapse)\n    \n            # Check result structure\n            assert 'conversion_happened' in result\n            assert 'time_to_conversion_seconds' in result\n            assert 'confidence' in result\n    \n            # Check result values\n>           assert result['conversion_happened'] == 1  # 0.7 rounded up\nE           assert 0 == 1\n\ntests/unit/miner/test_miner.py:57: AssertionError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward_negative_case", "duration": 0.001178666003397666, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x12d00b790>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x12d0bf8b0>\nsample_synapse = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward_negative_case(self, mock_miner, sample_synapse):\n        \"\"\"Test the forward method with a negative prediction.\"\"\"\n        # Mock the model output for negative case\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.3])):\n            result = mock_miner.forward(sample_synapse)\n    \n            assert result['conversion_happened'] == 0  # 0.3 rounded down\n            assert result['time_to_conversion_seconds'] == -1.0  # Negative for no conversion\n>           assert result['confidence'] == 0.3\nE           assert 0.0 == 0.3\n\ntests/unit/miner/test_miner.py:69: AssertionError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward_exception_handling", "duration": 0.0011001250022673048, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x12d00b250>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x12d0bc220>\nsample_synapse = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward_exception_handling(self, mock_miner, sample_synapse):\n        \"\"\"Test that exceptions in forward are handled properly.\"\"\"\n        # Mock the model to raise an exception\n        with patch.object(mock_miner.model, '__call__', side_effect=RuntimeError(\"Test error\")):\n            result = mock_miner.forward(sample_synapse)\n    \n            # Should return safe defaults\n            assert result['conversion_happened'] == 0\n            assert result['time_to_conversion_seconds'] == -1.0\n>           assert 'confidence' not in result  # Confidence should not be included in error case\nE           AssertionError: assert 'confidence' not in {'confidence': 0.0, 'conversion_happened': 0, 'time_to_conversion_seconds': -1.0}\n\ntests/unit/miner/test_miner.py:80: AssertionError"}, {"name": "tests/unit/miner/test_train.py::TestModelTraining::test_train_model", "duration": 0.005503957996552344, "error_message": "self = <test_train.TestModelTraining object at 0x12d0fa020>\nmock_adam = <MagicMock name='Adam' id='5050587536'>\nmock_dataloader = <MagicMock name='DataLoader' id='5050592288'>\nsample_dataset = (array([[0.02058449, 0.96990985, 0.83244264, 0.21233911, 0.18182497,\n        0.18340451, 0.30424224, 0.52475643, 0.431...3200496 ,\n        0.89552323, 0.38920168, 0.01083765, 0.90538198, 0.09128668]]), array([0, 1, 1, 0, 1, 1, 0, 1, 0, 1]))\n\n    @patch('torch.utils.data.DataLoader')\n    @patch('torch.optim.Adam')\n    def test_train_model(self, mock_adam, mock_dataloader, sample_dataset):\n        \"\"\"Test train_model function.\"\"\"\n        X_train, y_train = sample_dataset\n        X_val, y_val = sample_dataset  # Reuse for validation\n    \n        # Create mock miner with mock model\n        mock_miner = MagicMock()\n        mock_model = MagicMock()\n        mock_miner.model = mock_model\n    \n        # Mock DataLoader instances\n        mock_train_loader = MagicMock()\n        mock_val_loader = MagicMock()\n        mock_dataloader.side_effect = [mock_train_loader, mock_val_loader]\n    \n        # Mock optimizer\n        mock_optimizer = MagicMock()\n        mock_adam.return_value = mock_optimizer\n    \n        # Configure mock_train_loader to yield sample data\n        sample_batch = (torch.randn(4, 40), torch.randint(0, 2, (4,)).float())\n        mock_train_loader.__iter__.return_value = [sample_batch]\n        mock_train_loader.__len__.return_value = 1\n    \n        # Configure mock_val_loader to yield sample data\n        mock_val_loader.__iter__.return_value = [sample_batch]\n        mock_val_loader.__len__.return_value = 1\n    \n        # Call train_model\n>       history = train_model(\n            miner=mock_miner,\n            X_train=X_train,\n            y_train=y_train,\n            X_val=X_val,\n            y_val=y_val,\n            epochs=1,\n            batch_size=4,\n            learning_rate=0.001,\n            device=\"cpu\"\n        )\n\ntests/unit/miner/test_train.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/train.py:160: in train_model\n    loss = criterion(outputs, labels)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/module.py:1751: in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/module.py:1762: in _call_impl\n    return forward_call(*args, **kwargs)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/loss.py:699: in forward\n    return F.binary_cross_entropy(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ninput = <MagicMock name='mock.model().squeeze()' id='5052202576'>, target = tensor([1., 0., 1., 1.])\nweight = None, size_average = None, reduce = None, reduction = 'mean'\n\n    def binary_cross_entropy(\n        input: Tensor,\n        target: Tensor,\n        weight: Optional[Tensor] = None,\n        size_average: Optional[bool] = None,\n        reduce: Optional[bool] = None,\n        reduction: str = \"mean\",\n    ) -> Tensor:\n        r\"\"\"Measure Binary Cross Entropy between the target and input probabilities.\n    \n        See :class:`~torch.nn.BCELoss` for details.\n    \n        Args:\n            input: Tensor of arbitrary shape as probabilities.\n            target: Tensor of the same shape as input with values between 0 and 1.\n            weight (Tensor, optional): a manual rescaling weight\n                    if provided it's repeated to match input tensor shape\n            size_average (bool, optional): Deprecated (see :attr:`reduction`). By default,\n                the losses are averaged over each loss element in the batch. Note that for\n                some losses, there multiple elements per sample. If the field :attr:`size_average`\n                is set to ``False``, the losses are instead summed for each minibatch. Ignored\n                when reduce is ``False``. Default: ``True``\n            reduce (bool, optional): Deprecated (see :attr:`reduction`). By default, the\n                losses are averaged or summed over observations for each minibatch depending\n                on :attr:`size_average`. When :attr:`reduce` is ``False``, returns a loss per\n                batch element instead and ignores :attr:`size_average`. Default: ``True``\n            reduction (str, optional): Specifies the reduction to apply to the output:\n                ``'none'`` | ``'mean'`` | ``'sum'``. ``'none'``: no reduction will be applied,\n                ``'mean'``: the sum of the output will be divided by the number of\n                elements in the output, ``'sum'``: the output will be summed. Note: :attr:`size_average`\n                and :attr:`reduce` are in the process of being deprecated, and in the meantime,\n                specifying either of those two args will override :attr:`reduction`. Default: ``'mean'``\n    \n        Examples::\n    \n            >>> input = torch.randn(3, 2, requires_grad=True)\n            >>> target = torch.rand(3, 2, requires_grad=False)\n            >>> loss = F.binary_cross_entropy(torch.sigmoid(input), target)\n            >>> loss.backward()\n        \"\"\"\n        if has_torch_function_variadic(input, target, weight):\n            return handle_torch_function(\n                binary_cross_entropy,\n                (input, target, weight),\n                input,\n                target,\n                weight=weight,\n                size_average=size_average,\n                reduce=reduce,\n                reduction=reduction,\n            )\n        if size_average is not None or reduce is not None:\n            reduction_enum = _Reduction.legacy_get_enum(size_average, reduce)\n        else:\n            reduction_enum = _Reduction.get_enum(reduction)\n        if target.size() != input.size():\n>           raise ValueError(\n                f\"Using a target size ({target.size()}) that is different to the input size ({input.size()}) is deprecated. \"\n                \"Please ensure they have the same size.\"\n            )\nE           ValueError: Using a target size (torch.Size([4])) that is different to the input size (<MagicMock name='mock.model().squeeze().size()' id='5052906896'>) is deprecated. Please ensure they have the same size.\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/functional.py:3560: ValueError"}, {"name": "tests/unit/miner/test_train.py::TestModelTraining::test_load_model", "duration": 0.002516582993848715, "error_message": "self = <test_train.TestModelTraining object at 0x12d0f9c60>\ntmp_checkpoint_dir = PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-3/test_load_model0/checkpoints')\n\n    def test_load_model(self, tmp_checkpoint_dir):\n        \"\"\"Test load_model function.\"\"\"\n        # Create mock miner with mock model\n        mock_miner = MagicMock()\n        mock_model = MagicMock()\n        mock_miner.model = mock_model\n    \n        # Mock state_dict to return a dictionary\n        mock_model.state_dict.return_value = {\"layer1.weight\": torch.randn(5, 5)}\n    \n        # Save a model first\n        save_model(mock_miner, tmp_checkpoint_dir, \"test_model.pt\")\n    \n        # Call load_model\n>       load_model(mock_miner, tmp_checkpoint_dir / \"test_model.pt\")\n\ntests/unit/miner/test_train.py:208: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/train.py:253: in load_model\n    miner.model.load_state_dict(torch.load(checkpoint_path, map_location=miner.device))\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:1516: in load\n    return _load(\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2114: in _load\n    result = unpickler.load()\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/_weights_only_unpickler.py:532: in load\n    self.append(self.persistent_load(pid))\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2078: in persistent_load\n    typed_storage = load_tensor(\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2049: in load_tensor\n    typed_storage = torch.storage.TypedStorage(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <[AttributeError(\"'torch.storage.TypedStorage' object has no attribute '_untyped_storage'\") raised in repr()] TypedStorage object at 0x12d2c8fd0>\ndevice = None, dtype = torch.float32, wrap_storage = <MagicMock name='mock.device()' id='5052873072'>\n_internal = True\n\n    def __init__(\n        self,\n        *args,\n        device=None,\n        dtype=None,\n        wrap_storage=None,\n        _internal=False,\n    ):\n        if not _internal:\n            _warn_typed_storage_removal()\n        arg_error_msg = (\n            \"TypedStorage.__init__ received an invalid combination \"\n            \"of arguments. Expected one of:\\n\"\n            \" * (*, torch.device device, torch.dtype dtype)\\n\"\n            \" * (int size, *, torch.device device, torch.dtype dtype)\\n\"\n            \" * (Sequence data, *, torch.device device, torch.dtype dtype)\\n\"\n            \" * (*, UntypedStorage wrap_storage, torch.dtype dtype)\"\n        )\n    \n        if wrap_storage is not None:\n            if len(args) != 0:\n                raise RuntimeError(\n                    arg_error_msg\n                    + \"\\nNo positional arguments should be given when using \"\n                    \"'wrap_storage'\"\n                )\n    \n            if dtype is None:\n                raise RuntimeError(\n                    arg_error_msg + \"\\nArgument 'dtype' must be specified\"\n                )\n    \n            if not isinstance(dtype, torch.dtype):\n                raise TypeError(\n                    arg_error_msg\n                    + f\"\\nArgument 'dtype' must be torch.dtype, not {type(dtype)}\"\n                )\n    \n            if device is not None:\n                raise RuntimeError(\n                    arg_error_msg\n                    + \"\\nArgument 'device' should not be specified when 'wrap_storage' is given\"\n                )\n    \n            self.dtype = dtype\n    \n            if not isinstance(wrap_storage, torch.UntypedStorage):\n>               raise TypeError(\n                    arg_error_msg\n                    + f\"\\nArgument 'wrap_storage' must be UntypedStorage, but got {type(wrap_storage)}\"\n                )\nE               TypeError: TypedStorage.__init__ received an invalid combination of arguments. Expected one of:\nE                * (*, torch.device device, torch.dtype dtype)\nE                * (int size, *, torch.device device, torch.dtype dtype)\nE                * (Sequence data, *, torch.device device, torch.dtype dtype)\nE                * (*, UntypedStorage wrap_storage, torch.dtype dtype)\nE               Argument 'wrap_storage' must be UntypedStorage, but got <class 'unittest.mock.MagicMock'>\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/storage.py:827: TypeError"}, {"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.000633415998890996, "error_message": "self = <Coroutine test_forward>\n\n    def runtest(self) -> None:\n        self.obj = wrap_in_sync(\n            # https://github.com/pytest-dev/pytest-asyncio/issues/596\n            self.obj,  # type: ignore[has-type]\n        )\n>       super().runtest()\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pytest_asyncio/plugin.py:549: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pytest_asyncio/plugin.py:1069: in inner\n    _loop.run_until_complete(task)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/asyncio/base_events.py:649: in run_until_complete\n    return future.result()\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1393: in patched\n    with self.decoration_helper(patched,\n../../../../.pyenv/versions/3.10.15/lib/python3.10/contextlib.py:135: in __enter__\n    return next(self.gen)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1358: in decoration_helper\n    arg = exit_stack.enter_context(patching)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/contextlib.py:492: in enter_context\n    result = _cm_type.__enter__(cm)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x12d0fbeb0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x12aa848b0> does not have the attribute 'generate_conversation'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}, {"name": "tests/unit/validator/test_reward.py::TestValidator::test_diversity_reward", "duration": 0.0002426249993732199, "error_message": "self = <test_reward.TestValidator object at 0x12d0be860>\n\n    def test_diversity_reward(self):\n        \"\"\"Test diversity reward calculation.\"\"\"\n        validator = Validator()\n    \n        # Conservative prediction (0.5) should have 0 diversity reward\n>       assert validator.diversity_reward(0.5) == 0.0\nE       assert 0.5 == 0.0\nE        +  where 0.5 = diversity_reward(0.5)\nE        +    where diversity_reward = <conversion_subnet.validator.reward.Validator object at 0x12d438460>.diversity_reward\n\ntests/unit/validator/test_reward.py:107: AssertionError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:26.347291+05:30", "timestamp": 1746267566.347291}}}
{"text": "2025-05-03 15:49:26.398 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.905726", "seconds": 1.905726}, "exception": null, "extra": {"passed": 42, "failed": 10, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 29553, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:49:26.398772+05:30", "timestamp": 1746267566.398772}}}
{"text": "2025-05-03 15:52:45.673 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.518228", "seconds": 0.518228}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:45.673583+05:30", "timestamp": 1746267765.673583}}}
{"text": "2025-05-03 15:52:45.679 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.524402", "seconds": 0.524402}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:45.679757+05:30", "timestamp": 1746267765.679757}}}
{"text": "2025-05-03 15:52:45.682 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.527041", "seconds": 0.527041}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:45.682396+05:30", "timestamp": 1746267765.682396}}}
{"text": "2025-05-03 15:52:45.767 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.611851", "seconds": 0.611851}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:45.767206+05:30", "timestamp": 1746267765.767206}}}
{"text": "2025-05-03 15:52:45.768 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.613038", "seconds": 0.613038}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:45.768393+05:30", "timestamp": 1746267765.768393}}}
{"text": "2025-05-03 15:52:45.776 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.621184", "seconds": 0.621184}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:45.776539+05:30", "timestamp": 1746267765.776539}}}
{"text": "2025-05-03 15:52:45.777 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.622158", "seconds": 0.622158}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:45.777513+05:30", "timestamp": 1746267765.777513}}}
{"text": "2025-05-03 15:52:45.831 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.676324", "seconds": 0.676324}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:45.831679+05:30", "timestamp": 1746267765.831679}}}
{"text": "2025-05-03 15:52:46.201 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.045959", "seconds": 1.045959}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 4, "passed": 1, "failed": 3, "skipped": 0, "errors": 0}, "duration": 0.5754051208496094, "failed_tests": [{"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward", "duration": 0.002318167003977578, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x1513edcc0>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1513ec400>\nsample_synapse = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward(self, mock_miner, sample_synapse):\n        \"\"\"Test the forward method returns the expected output structure.\"\"\"\n        # Mock the model output\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.7])):\n            result = mock_miner.forward(sample_synapse)\n    \n            # Check result structure\n            assert 'conversion_happened' in result\n            assert 'time_to_conversion_seconds' in result\n            assert 'confidence' in result\n    \n            # Check result values\n>           assert result['conversion_happened'] == 1  # 0.7 rounded up\nE           assert 0 == 1\n\ntests/unit/miner/test_miner.py:57: AssertionError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward_negative_case", "duration": 0.0010976670018862933, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x1513ee350>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x151433ee0>\nsample_synapse = ConversionSynapse(features={'session_id': 'test-session-123', 'conversation_duration_seconds': 120.5, 'has_target_enti...ted_questions': 1, 'message_alternation_rate': 0.91}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward_negative_case(self, mock_miner, sample_synapse):\n        \"\"\"Test the forward method with a negative prediction.\"\"\"\n        # Mock the model output for negative case\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.3])):\n            result = mock_miner.forward(sample_synapse)\n    \n            assert result['conversion_happened'] == 0  # 0.3 rounded down\n            assert result['time_to_conversion_seconds'] == -1.0  # Negative for no conversion\n>           assert result['confidence'] == 0.3\nE           assert 0.0 == 0.3\n\ntests/unit/miner/test_miner.py:69: AssertionError"}, {"name": "tests/unit/validator/test_reward.py::TestValidator::test_diversity_reward", "duration": 0.00024033299996517599, "error_message": "self = <test_reward.TestValidator object at 0x1513ede40>\n\n    def test_diversity_reward(self):\n        \"\"\"Test diversity reward calculation.\"\"\"\n        validator = Validator()\n    \n        # Conservative prediction (0.5) should have 0 diversity reward\n        assert validator.diversity_reward(0.5) == 0.0\n    \n        # Bold prediction (0.0 or 1.0) should have max diversity reward\n>       assert validator.diversity_reward(0.0) == 0.5\nE       assert 0.0 == 0.5\nE        +  where 0.0 = diversity_reward(0.0)\nE        +    where diversity_reward = <conversion_subnet.validator.reward.Validator object at 0x1514b3c40>.diversity_reward\n\ntests/unit/validator/test_reward.py:110: AssertionError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:46.201314+05:30", "timestamp": 1746267766.201314}}}
{"text": "2025-05-03 15:52:46.237 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.081658", "seconds": 1.081658}, "exception": null, "extra": {"passed": 1, "failed": 3, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30118, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:52:46.237013+05:30", "timestamp": 1746267766.237013}}}
{"text": "2025-05-03 15:53:30.932 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.445995", "seconds": 0.445995}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:30.932031+05:30", "timestamp": 1746267810.932031}}}
{"text": "2025-05-03 15:53:30.936 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.450397", "seconds": 0.450397}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:30.936433+05:30", "timestamp": 1746267810.936433}}}
{"text": "2025-05-03 15:53:30.941 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.455669", "seconds": 0.455669}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:30.941705+05:30", "timestamp": 1746267810.941705}}}
{"text": "2025-05-03 15:53:31.026 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.540594", "seconds": 0.540594}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:31.026630+05:30", "timestamp": 1746267811.02663}}}
{"text": "2025-05-03 15:53:31.028 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.541978", "seconds": 0.541978}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:31.028014+05:30", "timestamp": 1746267811.028014}}}
{"text": "2025-05-03 15:53:31.036 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.550300", "seconds": 0.5503}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:31.036336+05:30", "timestamp": 1746267811.036336}}}
{"text": "2025-05-03 15:53:31.037 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.551440", "seconds": 0.55144}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:31.037476+05:30", "timestamp": 1746267811.037476}}}
{"text": "2025-05-03 15:53:31.039 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.553146", "seconds": 0.553146}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:31.039182+05:30", "timestamp": 1746267811.039182}}}
{"text": "2025-05-03 15:53:31.415 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:00.929239", "seconds": 0.929239}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 4, "passed": 2, "failed": 2, "skipped": 0, "errors": 0}, "duration": 0.5294249057769775, "failed_tests": [{"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward", "duration": 0.005349375001969747, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x11862e8f0>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x11862ceb0>\nsample_synapse = ConversionSynapse(features={}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward(self, mock_miner, sample_synapse):\n        \"\"\"Test the forward method returns the expected output structure.\"\"\"\n        # Create a simple mock features dictionary with numeric values\n        mock_features = {f'feature_{i}': float(i) for i in range(40)}\n        sample_synapse.features = mock_features\n    \n        # Mock the model output\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.7])):\n            result = mock_miner.forward(sample_synapse)\n    \n            # Check result structure\n            assert 'conversion_happened' in result\n            assert 'time_to_conversion_seconds' in result\n            assert 'confidence' in result\n    \n            # Check result values\n>           assert result['conversion_happened'] == 1  # 0.7 rounded up\nE           assert 0 == 1\n\ntests/unit/miner/test_miner.py:61: AssertionError"}, {"name": "tests/unit/miner/test_miner.py::TestBinaryClassificationMiner::test_forward_negative_case", "duration": 0.0011865830019814894, "error_message": "self = <test_miner.TestBinaryClassificationMiner object at 0x11862eda0>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x11866feb0>\nsample_synapse = ConversionSynapse(features={}, prediction=None, confidence=None, response_time=0.0, miner_uid=0)\n\n    def test_forward_negative_case(self, mock_miner, sample_synapse):\n        \"\"\"Test the forward method with a negative prediction.\"\"\"\n        # Create a simple mock features dictionary with numeric values\n        mock_features = {f'feature_{i}': float(i) for i in range(40)}\n        sample_synapse.features = mock_features\n    \n        # Mock the model output for negative case\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.3])):\n            result = mock_miner.forward(sample_synapse)\n    \n            assert result['conversion_happened'] == 0  # 0.3 rounded down\n            assert result['time_to_conversion_seconds'] == -1.0  # Negative for no conversion\n>           assert result['confidence'] == 0.3\nE           assert 0.0 == 0.3\n\ntests/unit/miner/test_miner.py:77: AssertionError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:31.415275+05:30", "timestamp": 1746267811.415275}}}
{"text": "2025-05-03 15:53:31.447 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:00.961321", "seconds": 0.961321}, "exception": null, "extra": {"passed": 2, "failed": 2, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30287, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:31.447357+05:30", "timestamp": 1746267811.447357}}}
{"text": "2025-05-03 15:53:56.479 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.498725", "seconds": 0.498725}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30390, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:56.479599+05:30", "timestamp": 1746267836.479599}}}
{"text": "2025-05-03 15:53:56.484 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.503705", "seconds": 0.503705}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30390, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:56.484579+05:30", "timestamp": 1746267836.484579}}}
{"text": "2025-05-03 15:53:56.499 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.519061", "seconds": 0.519061}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30390, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:56.499935+05:30", "timestamp": 1746267836.499935}}}
{"text": "2025-05-03 15:53:56.505 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.524508", "seconds": 0.524508}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30390, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:56.505382+05:30", "timestamp": 1746267836.505382}}}
{"text": "2025-05-03 15:53:56.507 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.526847", "seconds": 0.526847}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30390, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:56.507721+05:30", "timestamp": 1746267836.507721}}}
{"text": "2025-05-03 15:53:56.509 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.528643", "seconds": 0.528643}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30390, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:56.509517+05:30", "timestamp": 1746267836.509517}}}
{"text": "2025-05-03 15:53:56.884 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 0\n", "record": {"elapsed": {"repr": "0:00:00.903269", "seconds": 0.903269}, "exception": null, "extra": {"exitstatus": 0, "test_counts": {"total": 4, "passed": 4, "failed": 0, "skipped": 0, "errors": 0}, "duration": 0.45276808738708496}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 0", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30390, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:56.884143+05:30", "timestamp": 1746267836.884143}}}
{"text": "2025-05-03 15:53:56.885 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:00.904255", "seconds": 0.904255}, "exception": null, "extra": {"passed": 4, "failed": 0, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30390, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:53:56.885129+05:30", "timestamp": 1746267836.885129}}}
{"text": "2025-05-03 15:54:21.902 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.410597", "seconds": 0.410597}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:21.902061+05:30", "timestamp": 1746267861.902061}}}
{"text": "2025-05-03 15:54:21.907 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.415613", "seconds": 0.415613}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:21.907077+05:30", "timestamp": 1746267861.907077}}}
{"text": "2025-05-03 15:54:21.910 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.418863", "seconds": 0.418863}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:21.910327+05:30", "timestamp": 1746267861.910327}}}
{"text": "2025-05-03 15:54:21.995 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.504392", "seconds": 0.504392}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:21.995856+05:30", "timestamp": 1746267861.995856}}}
{"text": "2025-05-03 15:54:21.997 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: too many dimensions 'str'\n", "record": {"elapsed": {"repr": "0:00:00.506306", "seconds": 0.506306}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: too many dimensions 'str'", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:21.997770+05:30", "timestamp": 1746267861.99777}}}
{"text": "2025-05-03 15:54:22.006 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.515304", "seconds": 0.515304}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.006768+05:30", "timestamp": 1746267862.006768}}}
{"text": "2025-05-03 15:54:22.128 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.637007", "seconds": 0.637007}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.128471+05:30", "timestamp": 1746267862.128471}}}
{"text": "2025-05-03 15:54:22.132 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.641444", "seconds": 0.641444}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.132908+05:30", "timestamp": 1746267862.132908}}}
{"text": "2025-05-03 15:54:22.137 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.645721", "seconds": 0.645721}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.137185+05:30", "timestamp": 1746267862.137185}}}
{"text": "2025-05-03 15:54:22.142 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.650709", "seconds": 0.650709}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.142173+05:30", "timestamp": 1746267862.142173}}}
{"text": "2025-05-03 15:54:22.147 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.655981", "seconds": 0.655981}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.147445+05:30", "timestamp": 1746267862.147445}}}
{"text": "2025-05-03 15:54:22.148 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.657475", "seconds": 0.657475}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.148939+05:30", "timestamp": 1746267862.148939}}}
{"text": "2025-05-03 15:54:22.153 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.662201", "seconds": 0.662201}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.153665+05:30", "timestamp": 1746267862.153665}}}
{"text": "2025-05-03 15:54:22.320 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-4/test_save_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.828945", "seconds": 0.828945}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-4/test_save_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.320409+05:30", "timestamp": 1746267862.320409}}}
{"text": "2025-05-03 15:54:22.323 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-4/test_load_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.831784", "seconds": 0.831784}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-4/test_load_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.323248+05:30", "timestamp": 1746267862.323248}}}
{"text": "2025-05-03 15:54:22.508 | ERROR    | conversion_subnet.utils.log:error:130 - Missing required features: ['session_id']\n", "record": {"elapsed": {"repr": "0:00:01.016575", "seconds": 1.016575}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Missing required features: ['session_id']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.508039+05:30", "timestamp": 1746267862.508039}}}
{"text": "2025-05-03 15:54:22.509 | ERROR    | conversion_subnet.utils.log:error:130 - Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']\n", "record": {"elapsed": {"repr": "0:00:01.018026", "seconds": 1.018026}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.509490+05:30", "timestamp": 1746267862.50949}}}
{"text": "2025-05-03 15:54:22.511 | WARNING  | conversion_subnet.utils.log:warning:124 - Feature hour_of_day could not be converted to float\n", "record": {"elapsed": {"repr": "0:00:01.020461", "seconds": 1.020461}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "warning", "level": {"icon": "⚠️", "name": "WARNING", "no": 30}, "line": 124, "message": "Feature hour_of_day could not be converted to float", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.511925+05:30", "timestamp": 1746267862.511925}}}
{"text": "2025-05-03 15:54:22.713 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:01.221710", "seconds": 1.22171}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:22.713174+05:30", "timestamp": 1746267862.713174}}}
{"text": "2025-05-03 15:54:23.156 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.664635", "seconds": 1.664635}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 46, "failed": 6, "skipped": 0, "errors": 0}, "duration": 1.3195199966430664, "failed_tests": [{"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_miner_response_to_validator", "duration": 0.0023347090027527884, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x124119780>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1241b42e0>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_miner_response_to_validator(self, mock_miner, sample_features):\n        \"\"\"Test that miner can process features and return valid response.\"\"\"\n        # Create a sample synapse with features\n        synapse = ConversionSynapse(features=sample_features)\n    \n        # Create a mock for the dendrite property\n        mock_dendrite = MagicMock()\n        mock_dendrite.hotkey = \"test_hotkey\"\n    \n        # Patch the synapse directly\n        synapse.__dict__['dendrite'] = mock_dendrite\n    \n        # Mock the metagraph for the miner\n        mock_miner.metagraph = MagicMock()\n        mock_miner.metagraph.hotkeys = [\"test_hotkey\"]\n    \n        # Mock the model output - positive prediction (0.8)\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.8])):\n            # Process synapse\n>           result = await mock_miner.forward(synapse)\nE           TypeError: object dict can't be used in 'await' expression\n\ntests/integration/test_miner_validator.py:41: TypeError"}, {"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_validator_evaluation_of_miner_response", "duration": 0.0018833750000339933, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x124119ab0>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x124237d00>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_validator_evaluation_of_miner_response(self, mock_miner, sample_features):\n        \"\"\"Test that validator can evaluate miner responses correctly.\"\"\"\n        # Create a sample synapse with features\n        synapse = ConversionSynapse(features=sample_features)\n    \n        # Create a mock for the dendrite property\n        mock_dendrite = MagicMock()\n        mock_dendrite.hotkey = \"test_hotkey\"\n    \n        # Patch the synapse directly\n        synapse.__dict__['dendrite'] = mock_dendrite\n    \n        # Mock the metagraph for the miner\n        mock_miner.metagraph = MagicMock()\n        mock_miner.metagraph.hotkeys = [\"test_hotkey\"]\n    \n        # Generate ground truth\n        ground_truth = generate_ground_truth(sample_features)\n    \n        # Mock the model output\n        with patch.object(mock_miner.model, '__call__', return_value=torch.tensor([0.8])):\n            # Process synapse with miner\n>           response = await mock_miner.forward(synapse)\nE           TypeError: object dict can't be used in 'await' expression\n\ntests/integration/test_miner_validator.py:76: TypeError"}, {"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_miner_validator_end_to_end", "duration": 0.001928915997268632, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x1241197e0>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x12425fdc0>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_miner_validator_end_to_end(self, mock_miner, sample_features):\n        \"\"\"Test end-to-end flow from validator query to miner to reward calculation.\"\"\"\n        # Create a mock validator with dendrite\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n    \n        # Mock get_random_uids to return [0]\n>       with patch('conversion_subnet.validator.forward.get_random_uids', return_value=[0]):\n\ntests/integration/test_miner_validator.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x124266b90>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x121d848b0> does not have the attribute 'get_random_uids'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}, {"name": "tests/unit/miner/test_train.py::TestModelTraining::test_train_model", "duration": 0.005711958001484163, "error_message": "self = <test_train.TestModelTraining object at 0x12415a290>\nmock_adam = <MagicMock name='Adam' id='4901356496'>\nmock_dataloader = <MagicMock name='DataLoader' id='4901262752'>\nsample_dataset = (array([[0.02058449, 0.96990985, 0.83244264, 0.21233911, 0.18182497,\n        0.18340451, 0.30424224, 0.52475643, 0.431...3200496 ,\n        0.89552323, 0.38920168, 0.01083765, 0.90538198, 0.09128668]]), array([0, 1, 1, 0, 1, 1, 0, 1, 0, 1]))\n\n    @patch('torch.utils.data.DataLoader')\n    @patch('torch.optim.Adam')\n    def test_train_model(self, mock_adam, mock_dataloader, sample_dataset):\n        \"\"\"Test train_model function.\"\"\"\n        X_train, y_train = sample_dataset\n        X_val, y_val = sample_dataset  # Reuse for validation\n    \n        # Create mock miner with mock model\n        mock_miner = MagicMock()\n        mock_model = MagicMock()\n        mock_miner.model = mock_model\n    \n        # Mock DataLoader instances\n        mock_train_loader = MagicMock()\n        mock_val_loader = MagicMock()\n        mock_dataloader.side_effect = [mock_train_loader, mock_val_loader]\n    \n        # Mock optimizer\n        mock_optimizer = MagicMock()\n        mock_adam.return_value = mock_optimizer\n    \n        # Configure mock_train_loader to yield sample data\n        sample_batch = (torch.randn(4, 40), torch.randint(0, 2, (4,)).float())\n        mock_train_loader.__iter__.return_value = [sample_batch]\n        mock_train_loader.__len__.return_value = 1\n    \n        # Configure mock_val_loader to yield sample data\n        mock_val_loader.__iter__.return_value = [sample_batch]\n        mock_val_loader.__len__.return_value = 1\n    \n        # Call train_model\n>       history = train_model(\n            miner=mock_miner,\n            X_train=X_train,\n            y_train=y_train,\n            X_val=X_val,\n            y_val=y_val,\n            epochs=1,\n            batch_size=4,\n            learning_rate=0.001,\n            device=\"cpu\"\n        )\n\ntests/unit/miner/test_train.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/train.py:160: in train_model\n    loss = criterion(outputs, labels)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/module.py:1751: in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/module.py:1762: in _call_impl\n    return forward_call(*args, **kwargs)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/loss.py:699: in forward\n    return F.binary_cross_entropy(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ninput = <MagicMock name='mock.model().squeeze()' id='4901803856'>, target = tensor([1., 1., 0., 1.])\nweight = None, size_average = None, reduce = None, reduction = 'mean'\n\n    def binary_cross_entropy(\n        input: Tensor,\n        target: Tensor,\n        weight: Optional[Tensor] = None,\n        size_average: Optional[bool] = None,\n        reduce: Optional[bool] = None,\n        reduction: str = \"mean\",\n    ) -> Tensor:\n        r\"\"\"Measure Binary Cross Entropy between the target and input probabilities.\n    \n        See :class:`~torch.nn.BCELoss` for details.\n    \n        Args:\n            input: Tensor of arbitrary shape as probabilities.\n            target: Tensor of the same shape as input with values between 0 and 1.\n            weight (Tensor, optional): a manual rescaling weight\n                    if provided it's repeated to match input tensor shape\n            size_average (bool, optional): Deprecated (see :attr:`reduction`). By default,\n                the losses are averaged over each loss element in the batch. Note that for\n                some losses, there multiple elements per sample. If the field :attr:`size_average`\n                is set to ``False``, the losses are instead summed for each minibatch. Ignored\n                when reduce is ``False``. Default: ``True``\n            reduce (bool, optional): Deprecated (see :attr:`reduction`). By default, the\n                losses are averaged or summed over observations for each minibatch depending\n                on :attr:`size_average`. When :attr:`reduce` is ``False``, returns a loss per\n                batch element instead and ignores :attr:`size_average`. Default: ``True``\n            reduction (str, optional): Specifies the reduction to apply to the output:\n                ``'none'`` | ``'mean'`` | ``'sum'``. ``'none'``: no reduction will be applied,\n                ``'mean'``: the sum of the output will be divided by the number of\n                elements in the output, ``'sum'``: the output will be summed. Note: :attr:`size_average`\n                and :attr:`reduce` are in the process of being deprecated, and in the meantime,\n                specifying either of those two args will override :attr:`reduction`. Default: ``'mean'``\n    \n        Examples::\n    \n            >>> input = torch.randn(3, 2, requires_grad=True)\n            >>> target = torch.rand(3, 2, requires_grad=False)\n            >>> loss = F.binary_cross_entropy(torch.sigmoid(input), target)\n            >>> loss.backward()\n        \"\"\"\n        if has_torch_function_variadic(input, target, weight):\n            return handle_torch_function(\n                binary_cross_entropy,\n                (input, target, weight),\n                input,\n                target,\n                weight=weight,\n                size_average=size_average,\n                reduce=reduce,\n                reduction=reduction,\n            )\n        if size_average is not None or reduce is not None:\n            reduction_enum = _Reduction.legacy_get_enum(size_average, reduce)\n        else:\n            reduction_enum = _Reduction.get_enum(reduction)\n        if target.size() != input.size():\n>           raise ValueError(\n                f\"Using a target size ({target.size()}) that is different to the input size ({input.size()}) is deprecated. \"\n                \"Please ensure they have the same size.\"\n            )\nE           ValueError: Using a target size (torch.Size([4])) that is different to the input size (<MagicMock name='mock.model().squeeze().size()' id='4901820048'>) is deprecated. Please ensure they have the same size.\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/functional.py:3560: ValueError"}, {"name": "tests/unit/miner/test_train.py::TestModelTraining::test_load_model", "duration": 0.0028473329948610626, "error_message": "self = <test_train.TestModelTraining object at 0x12415a7a0>\ntmp_checkpoint_dir = PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-4/test_load_model0/checkpoints')\n\n    def test_load_model(self, tmp_checkpoint_dir):\n        \"\"\"Test load_model function.\"\"\"\n        # Create mock miner with mock model\n        mock_miner = MagicMock()\n        mock_model = MagicMock()\n        mock_miner.model = mock_model\n    \n        # Mock state_dict to return a dictionary\n        mock_model.state_dict.return_value = {\"layer1.weight\": torch.randn(5, 5)}\n    \n        # Save a model first\n        save_model(mock_miner, tmp_checkpoint_dir, \"test_model.pt\")\n    \n        # Call load_model\n>       load_model(mock_miner, tmp_checkpoint_dir / \"test_model.pt\")\n\ntests/unit/miner/test_train.py:208: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/train.py:253: in load_model\n    miner.model.load_state_dict(torch.load(checkpoint_path, map_location=miner.device))\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:1516: in load\n    return _load(\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2114: in _load\n    result = unpickler.load()\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/_weights_only_unpickler.py:532: in load\n    self.append(self.persistent_load(pid))\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2078: in persistent_load\n    typed_storage = load_tensor(\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2049: in load_tensor\n    typed_storage = torch.storage.TypedStorage(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <[AttributeError(\"'torch.storage.TypedStorage' object has no attribute '_untyped_storage'\") raised in repr()] TypedStorage object at 0x124572140>\ndevice = None, dtype = torch.float32, wrap_storage = <MagicMock name='mock.device()' id='4904663456'>\n_internal = True\n\n    def __init__(\n        self,\n        *args,\n        device=None,\n        dtype=None,\n        wrap_storage=None,\n        _internal=False,\n    ):\n        if not _internal:\n            _warn_typed_storage_removal()\n        arg_error_msg = (\n            \"TypedStorage.__init__ received an invalid combination \"\n            \"of arguments. Expected one of:\\n\"\n            \" * (*, torch.device device, torch.dtype dtype)\\n\"\n            \" * (int size, *, torch.device device, torch.dtype dtype)\\n\"\n            \" * (Sequence data, *, torch.device device, torch.dtype dtype)\\n\"\n            \" * (*, UntypedStorage wrap_storage, torch.dtype dtype)\"\n        )\n    \n        if wrap_storage is not None:\n            if len(args) != 0:\n                raise RuntimeError(\n                    arg_error_msg\n                    + \"\\nNo positional arguments should be given when using \"\n                    \"'wrap_storage'\"\n                )\n    \n            if dtype is None:\n                raise RuntimeError(\n                    arg_error_msg + \"\\nArgument 'dtype' must be specified\"\n                )\n    \n            if not isinstance(dtype, torch.dtype):\n                raise TypeError(\n                    arg_error_msg\n                    + f\"\\nArgument 'dtype' must be torch.dtype, not {type(dtype)}\"\n                )\n    \n            if device is not None:\n                raise RuntimeError(\n                    arg_error_msg\n                    + \"\\nArgument 'device' should not be specified when 'wrap_storage' is given\"\n                )\n    \n            self.dtype = dtype\n    \n            if not isinstance(wrap_storage, torch.UntypedStorage):\n>               raise TypeError(\n                    arg_error_msg\n                    + f\"\\nArgument 'wrap_storage' must be UntypedStorage, but got {type(wrap_storage)}\"\n                )\nE               TypeError: TypedStorage.__init__ received an invalid combination of arguments. Expected one of:\nE                * (*, torch.device device, torch.dtype dtype)\nE                * (int size, *, torch.device device, torch.dtype dtype)\nE                * (Sequence data, *, torch.device device, torch.dtype dtype)\nE                * (*, UntypedStorage wrap_storage, torch.dtype dtype)\nE               Argument 'wrap_storage' must be UntypedStorage, but got <class 'unittest.mock.MagicMock'>\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/storage.py:827: TypeError"}, {"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.0006760839969501831, "error_message": "self = <Coroutine test_forward>\n\n    def runtest(self) -> None:\n        self.obj = wrap_in_sync(\n            # https://github.com/pytest-dev/pytest-asyncio/issues/596\n            self.obj,  # type: ignore[has-type]\n        )\n>       super().runtest()\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pytest_asyncio/plugin.py:549: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/pytest_asyncio/plugin.py:1069: in inner\n    _loop.run_until_complete(task)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/asyncio/base_events.py:649: in run_until_complete\n    return future.result()\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1393: in patched\n    with self.decoration_helper(patched,\n../../../../.pyenv/versions/3.10.15/lib/python3.10/contextlib.py:135: in __enter__\n    return next(self.gen)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1358: in decoration_helper\n    arg = exit_stack.enter_context(patching)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/contextlib.py:492: in enter_context\n    result = _cm_type.__enter__(cm)\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x124180d30>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x121d848b0> does not have the attribute 'generate_conversation'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:23.156099+05:30", "timestamp": 1746267863.156099}}}
{"text": "2025-05-03 15:54:23.203 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.712506", "seconds": 1.712506}, "exception": null, "extra": {"passed": 46, "failed": 6, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30477, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:54:23.203970+05:30", "timestamp": 1746267863.20397}}}
{"text": "2025-05-03 15:55:35.998 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.482167", "seconds": 0.482167}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30722, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:35.998017+05:30", "timestamp": 1746267935.998017}}}
{"text": "2025-05-03 15:55:36.002 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.486949", "seconds": 0.486949}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30722, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:36.002799+05:30", "timestamp": 1746267936.002799}}}
{"text": "2025-05-03 15:55:36.020 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.504240", "seconds": 0.50424}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30722, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:36.020090+05:30", "timestamp": 1746267936.02009}}}
{"text": "2025-05-03 15:55:36.026 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.511064", "seconds": 0.511064}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30722, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:36.026914+05:30", "timestamp": 1746267936.026914}}}
{"text": "2025-05-03 15:55:36.210 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.694949", "seconds": 0.694949}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30722, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:36.210799+05:30", "timestamp": 1746267936.210799}}}
{"text": "2025-05-03 15:55:36.571 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.055403", "seconds": 1.055403}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 3, "passed": 2, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.601499080657959, "failed_tests": [{"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_miner_validator_end_to_end", "duration": 0.0019974579990957864, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x11dcf1c60>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x11dcf0a90>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_miner_validator_end_to_end(self, mock_miner, sample_features):\n        \"\"\"Test end-to-end flow from validator query to miner to reward calculation.\"\"\"\n        # Create a mock validator with dendrite\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n    \n        # Create a special implementation of forward for testing\n        async def mock_forward(validator):\n            # Create a mocked ground truth\n            ground_truth = {'conversion_happened': 1, 'time_to_conversion_seconds': 60.0}\n    \n            # Create a sample synapse with features\n            synapse = ConversionSynapse(features=sample_features)\n    \n            # Expected response from miner\n            expected_output = {\n                'conversion_happened': 1,\n                'time_to_conversion_seconds': 60.0,\n                'confidence': 0.8\n            }\n    \n            # Create a mock response\n            response = ConversionSynapse(\n                features=sample_features,\n                prediction=expected_output,\n                confidence=expected_output['confidence'],\n                response_time=10.0,\n                miner_uid=0\n            )\n    \n            # Set up validator.dendrite to return this response\n            validator.dendrite.query.return_value = [response]\n    \n            # Call validator.update_scores\n            validator.update_scores(ground_truth, [response])\n    \n            # Update conversation history\n            validator.conversation_history[sample_features['session_id']] = ground_truth\n    \n            return [response]\n    \n        # Test our mock forward implementation\n>       with patch('conversion_subnet.validator.forward.forward', side_effect=mock_forward):\n\ntests/integration/test_miner_validator.py:152: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x11dd882e0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x11b784a60> does not have the attribute 'forward'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30722, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:36.571253+05:30", "timestamp": 1746267936.571253}}}
{"text": "2025-05-03 15:55:36.658 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.143031", "seconds": 1.143031}, "exception": null, "extra": {"passed": 2, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30722, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:36.658881+05:30", "timestamp": 1746267936.658881}}}
{"text": "2025-05-03 15:55:55.477 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.494973", "seconds": 0.494973}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30807, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:55.477118+05:30", "timestamp": 1746267955.477118}}}
{"text": "2025-05-03 15:55:55.482 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.500012", "seconds": 0.500012}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30807, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:55.482157+05:30", "timestamp": 1746267955.482157}}}
{"text": "2025-05-03 15:55:55.498 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.516668", "seconds": 0.516668}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30807, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:55.498813+05:30", "timestamp": 1746267955.498813}}}
{"text": "2025-05-03 15:55:55.505 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.523020", "seconds": 0.52302}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30807, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:55.505165+05:30", "timestamp": 1746267955.505165}}}
{"text": "2025-05-03 15:55:55.691 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.709016", "seconds": 0.709016}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30807, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:55.691161+05:30", "timestamp": 1746267955.691161}}}
{"text": "2025-05-03 15:55:56.006 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.024646", "seconds": 1.024646}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 3, "passed": 2, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.5591151714324951, "failed_tests": [{"name": "tests/integration/test_miner_validator.py::TestMinerValidatorIntegration::test_miner_validator_end_to_end", "duration": 0.001789166999515146, "error_message": "self = <test_miner_validator.TestMinerValidatorIntegration object at 0x1235b1a20>\nmock_miner = <conversion_subnet.miner.miner.BinaryClassificationMiner object at 0x1235b0880>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    async def test_miner_validator_end_to_end(self, mock_miner, sample_features):\n        \"\"\"Test end-to-end flow from validator query to miner to reward calculation.\"\"\"\n        # Create a mock validator with dendrite\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n    \n        # Create a special implementation of forward for testing\n        async def mock_forward(validator):\n            # Create a mocked ground truth\n            ground_truth = {'conversion_happened': 1, 'time_to_conversion_seconds': 60.0}\n    \n            # Create a sample synapse with features\n            synapse = ConversionSynapse(features=sample_features)\n    \n            # Expected response from miner\n            expected_output = {\n                'conversion_happened': 1,\n                'time_to_conversion_seconds': 60.0,\n                'confidence': 0.8\n            }\n    \n            # Create a mock response\n            response = ConversionSynapse(\n                features=sample_features,\n                prediction=expected_output,\n                confidence=expected_output['confidence'],\n                response_time=10.0,\n                miner_uid=0\n            )\n    \n            # Set up validator.dendrite to return this response\n            validator.dendrite.query.return_value = [response]\n    \n            # Call validator.update_scores\n            validator.update_scores(ground_truth, [response])\n    \n            # Update conversation history\n            validator.conversation_history[sample_features['session_id']] = ground_truth\n    \n            return [response]\n    \n        # Test our mock forward implementation\n>       with patch('conversion_subnet.validator.forward.forward', new=mock_forward):\n\ntests/integration/test_miner_validator.py:152: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x1237884c0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x117d84a60> does not have the attribute 'forward'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30807, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:56.006791+05:30", "timestamp": 1746267956.006791}}}
{"text": "2025-05-03 15:55:56.042 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.060571", "seconds": 1.060571}, "exception": null, "extra": {"passed": 2, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30807, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:55:56.042716+05:30", "timestamp": 1746267956.042716}}}
{"text": "2025-05-03 15:56:20.939 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.400771", "seconds": 0.400771}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30906, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:20.939345+05:30", "timestamp": 1746267980.939345}}}
{"text": "2025-05-03 15:56:20.943 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.405249", "seconds": 0.405249}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30906, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:20.943823+05:30", "timestamp": 1746267980.943823}}}
{"text": "2025-05-03 15:56:20.960 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.421429", "seconds": 0.421429}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30906, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:20.960003+05:30", "timestamp": 1746267980.960003}}}
{"text": "2025-05-03 15:56:20.966 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.428207", "seconds": 0.428207}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30906, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:20.966781+05:30", "timestamp": 1746267980.966781}}}
{"text": "2025-05-03 15:56:20.968 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.429895", "seconds": 0.429895}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30906, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:20.968469+05:30", "timestamp": 1746267980.968469}}}
{"text": "2025-05-03 15:56:21.339 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 0\n", "record": {"elapsed": {"repr": "0:00:00.801069", "seconds": 0.801069}, "exception": null, "extra": {"exitstatus": 0, "test_counts": {"total": 3, "passed": 3, "failed": 0, "skipped": 0, "errors": 0}, "duration": 0.4296760559082031}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 0", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30906, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:21.339643+05:30", "timestamp": 1746267981.339643}}}
{"text": "2025-05-03 15:56:21.340 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:00.802415", "seconds": 0.802415}, "exception": null, "extra": {"passed": 3, "failed": 0, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 30906, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:21.340989+05:30", "timestamp": 1746267981.340989}}}
{"text": "2025-05-03 15:56:51.416 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.398153", "seconds": 0.398153}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31012, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:51.416582+05:30", "timestamp": 1746268011.416582}}}
{"text": "2025-05-03 15:56:51.611 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.593501", "seconds": 0.593501}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31012, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:51.611930+05:30", "timestamp": 1746268011.61193}}}
{"text": "2025-05-03 15:56:51.954 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:00.935789", "seconds": 0.935789}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 1, "passed": 0, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.5751030445098877, "failed_tests": [{"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.004027499999210704, "error_message": "self = <test_forward.TestForward object at 0x125c37b20>\nmock_generate = <MagicMock name='generate_conversation' id='4928520928'>\nmock_get_uids = <MagicMock name='get_random_uids' id='4928089600'>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    @pytest.mark.asyncio\n    @patch('conversion_subnet.utils.uids.get_random_uids')\n    @patch('conversion_subnet.validator.generate.generate_conversation')\n    async def test_forward(self, mock_generate, mock_get_uids, sample_features):\n        \"\"\"Test the main forward function.\"\"\"\n        # Mock the validator\n        validator = MagicMock()\n        validator.config = MagicMock()\n        validator.config.neuron = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock() for _ in range(3)]\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n    \n        # Set up mocks\n        mock_get_uids.return_value = [0, 1, 2]\n        mock_generate.return_value = sample_features\n    \n        # Mock the validate_features function\n        with patch('conversion_subnet.validator.utils.validate_features', return_value=sample_features):\n            # Mock responses\n            responses = []\n            for i in range(3):\n                response = ConversionSynapse(\n                    features=sample_features,\n                    prediction={'conversion_happened': 1, 'time_to_conversion_seconds': 70.0},\n                    confidence=0.8,\n                    response_time=5.0,\n                    miner_uid=i\n                )\n                responses.append(response)\n            validator.dendrite.query.return_value = responses\n    \n            # Create a mock ground truth\n            ground_truth = {'conversion_happened': 1, 'time_to_conversion_seconds': 60.0}\n    \n            # Mock the generate_ground_truth function\n>           with patch('conversion_subnet.validator.forward.generate_ground_truth', return_value=ground_truth):\n\ntests/unit/validator/test_forward.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x125c97e80>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x122b84a60> does not have the attribute 'generate_ground_truth'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31012, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:51.954218+05:30", "timestamp": 1746268011.954218}}}
{"text": "2025-05-03 15:56:52.043 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.025279", "seconds": 1.025279}, "exception": null, "extra": {"passed": 0, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31012, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:56:52.043708+05:30", "timestamp": 1746268012.043708}}}
{"text": "2025-05-03 15:57:15.170 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.395018", "seconds": 0.395018}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31116, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:57:15.170522+05:30", "timestamp": 1746268035.170522}}}
{"text": "2025-05-03 15:57:15.255 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.480222", "seconds": 0.480222}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31116, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:57:15.255726+05:30", "timestamp": 1746268035.255726}}}
{"text": "2025-05-03 15:57:15.621 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:00.845874", "seconds": 0.845874}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 1, "passed": 0, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.49005579948425293, "failed_tests": [{"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.0004960000005667098, "error_message": "self = <test_forward.TestForward object at 0x121a39600>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    @pytest.mark.asyncio\n    async def test_forward(self, sample_features):\n        \"\"\"Test the main forward function.\"\"\"\n        # Mock the validate_features and generate_ground_truth functions directly\n>       original_validate_features = validate_features\nE       UnboundLocalError: local variable 'validate_features' referenced before assignment\n\ntests/unit/validator/test_forward.py:121: UnboundLocalError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31116, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:57:15.621378+05:30", "timestamp": 1746268035.621378}}}
{"text": "2025-05-03 15:57:15.651 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:00.876359", "seconds": 0.876359}, "exception": null, "extra": {"passed": 0, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31116, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:57:15.651863+05:30", "timestamp": 1746268035.651863}}}
{"text": "2025-05-03 15:58:49.239 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.508755", "seconds": 0.508755}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31405, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:58:49.239652+05:30", "timestamp": 1746268129.239652}}}
{"text": "2025-05-03 15:58:49.437 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.706494", "seconds": 0.706494}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31405, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:58:49.437391+05:30", "timestamp": 1746268129.437391}}}
{"text": "2025-05-03 15:58:49.758 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.027945", "seconds": 1.027945}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 1, "passed": 0, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.5564830303192139, "failed_tests": [{"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.003507291999994777, "error_message": "self = <test_forward.TestForward object at 0x1260f9750>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    @pytest.mark.asyncio\n    async def test_forward(self, sample_features):\n        \"\"\"Test the main forward function.\"\"\"\n        # Create a mock response\n        response = ConversionSynapse(\n            features=sample_features,\n            prediction={'conversion_happened': 1, 'time_to_conversion_seconds': 70.0},\n            confidence=0.8,\n            response_time=0.0,\n            miner_uid=0\n        )\n    \n        # Create our own validator instance\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.dendrite.query = AsyncMock(return_value=[response])\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n    \n        # Override behavior with a simple test\n        with patch('conversion_subnet.utils.uids.get_random_uids', return_value=[0]):\n            with patch('conversion_subnet.validator.generate.generate_conversation', return_value=sample_features):\n                with patch('conversion_subnet.validator.utils.validate_features', return_value=sample_features):\n>                   with patch('conversion_subnet.validator.forward.generate_ground_truth', return_value={'conversion_happened': 1, 'time_to_conversion_seconds': 60.0}):\n\ntests/unit/validator/test_forward.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x1261503a0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x123084a60> does not have the attribute 'generate_ground_truth'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31405, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:58:49.758842+05:30", "timestamp": 1746268129.758842}}}
{"text": "2025-05-03 15:58:49.793 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.063102", "seconds": 1.063102}, "exception": null, "extra": {"passed": 0, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31405, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:58:49.793999+05:30", "timestamp": 1746268129.793999}}}
{"text": "2025-05-03 15:59:10.981 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.540309", "seconds": 0.540309}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:10.981526+05:30", "timestamp": 1746268150.981526}}}
{"text": "2025-05-03 15:59:10.993 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.552489", "seconds": 0.552489}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:10.993706+05:30", "timestamp": 1746268150.993706}}}
{"text": "2025-05-03 15:59:11.010 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.568850", "seconds": 0.56885}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.010067+05:30", "timestamp": 1746268151.010067}}}
{"text": "2025-05-03 15:59:11.016 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.575123", "seconds": 0.575123}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.016340+05:30", "timestamp": 1746268151.01634}}}
{"text": "2025-05-03 15:59:11.021 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.580454", "seconds": 0.580454}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.021671+05:30", "timestamp": 1746268151.021671}}}
{"text": "2025-05-03 15:59:11.025 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.584382", "seconds": 0.584382}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.025599+05:30", "timestamp": 1746268151.025599}}}
{"text": "2025-05-03 15:59:11.030 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.588953", "seconds": 0.588953}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.030170+05:30", "timestamp": 1746268151.03017}}}
{"text": "2025-05-03 15:59:11.034 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.593620", "seconds": 0.59362}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.034837+05:30", "timestamp": 1746268151.034837}}}
{"text": "2025-05-03 15:59:11.039 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.598374", "seconds": 0.598374}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.039591+05:30", "timestamp": 1746268151.039591}}}
{"text": "2025-05-03 15:59:11.048 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.607746", "seconds": 0.607746}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.048963+05:30", "timestamp": 1746268151.048963}}}
{"text": "2025-05-03 15:59:11.053 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.612553", "seconds": 0.612553}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.053770+05:30", "timestamp": 1746268151.05377}}}
{"text": "2025-05-03 15:59:11.340 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.899151", "seconds": 0.899151}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.340368+05:30", "timestamp": 1746268151.340368}}}
{"text": "2025-05-03 15:59:11.787 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.346695", "seconds": 1.346695}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 14, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.8706810474395752, "failed_tests": [{"name": "tests/unit/miner/test_train.py::TestModelTraining::test_train_model", "duration": 0.05440312499558786, "error_message": "self = <test_train.TestModelTraining object at 0x125bfe3b0>\nmock_adam = <MagicMock name='Adam' id='4928933744'>\nmock_dataloader = <MagicMock name='DataLoader' id='4928936096'>\nsample_dataset = (array([[0.02058449, 0.96990985, 0.83244264, 0.21233911, 0.18182497,\n        0.18340451, 0.30424224, 0.52475643, 0.431...3200496 ,\n        0.89552323, 0.38920168, 0.01083765, 0.90538198, 0.09128668]]), array([0, 1, 1, 0, 1, 1, 0, 1, 0, 1]))\n\n    @patch('torch.utils.data.DataLoader')\n    @patch('torch.optim.Adam')\n    def test_train_model(self, mock_adam, mock_dataloader, sample_dataset):\n        \"\"\"Test train_model function.\"\"\"\n        X_train, y_train = sample_dataset\n        X_val, y_val = sample_dataset  # Reuse for validation\n    \n        # Create mock miner with mock model\n        mock_miner = MagicMock()\n        mock_model = MagicMock()\n        mock_miner.model = mock_model\n    \n        # Mock DataLoader instances\n        mock_train_loader = MagicMock()\n        mock_val_loader = MagicMock()\n        mock_dataloader.side_effect = [mock_train_loader, mock_val_loader]\n    \n        # Mock optimizer\n        mock_optimizer = MagicMock()\n        mock_adam.return_value = mock_optimizer\n    \n        # Configure mock_train_loader to yield sample data\n        sample_batch = (torch.randn(4, 40), torch.randint(0, 2, (4,)).float())\n        mock_train_loader.__iter__.return_value = [sample_batch]\n        mock_train_loader.__len__.return_value = 1\n    \n        # Configure mock_val_loader to yield sample data\n        mock_val_loader.__iter__.return_value = [sample_batch]\n        mock_val_loader.__len__.return_value = 1\n    \n        # Call train_model\n>       history = train_model(\n            miner=mock_miner,\n            X_train=X_train,\n            y_train=y_train,\n            X_val=X_val,\n            y_val=y_val,\n            epochs=1,\n            batch_size=4,\n            learning_rate=0.001,\n            device=\"cpu\"\n        )\n\ntests/unit/miner/test_train.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/train.py:160: in train_model\n    loss = criterion(outputs, labels)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/module.py:1751: in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/module.py:1762: in _call_impl\n    return forward_call(*args, **kwargs)\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/modules/loss.py:699: in forward\n    return F.binary_cross_entropy(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ninput = <MagicMock name='mock.model().squeeze()' id='4929463456'>, target = tensor([0., 1., 1., 1.])\nweight = None, size_average = None, reduce = None, reduction = 'mean'\n\n    def binary_cross_entropy(\n        input: Tensor,\n        target: Tensor,\n        weight: Optional[Tensor] = None,\n        size_average: Optional[bool] = None,\n        reduce: Optional[bool] = None,\n        reduction: str = \"mean\",\n    ) -> Tensor:\n        r\"\"\"Measure Binary Cross Entropy between the target and input probabilities.\n    \n        See :class:`~torch.nn.BCELoss` for details.\n    \n        Args:\n            input: Tensor of arbitrary shape as probabilities.\n            target: Tensor of the same shape as input with values between 0 and 1.\n            weight (Tensor, optional): a manual rescaling weight\n                    if provided it's repeated to match input tensor shape\n            size_average (bool, optional): Deprecated (see :attr:`reduction`). By default,\n                the losses are averaged over each loss element in the batch. Note that for\n                some losses, there multiple elements per sample. If the field :attr:`size_average`\n                is set to ``False``, the losses are instead summed for each minibatch. Ignored\n                when reduce is ``False``. Default: ``True``\n            reduce (bool, optional): Deprecated (see :attr:`reduction`). By default, the\n                losses are averaged or summed over observations for each minibatch depending\n                on :attr:`size_average`. When :attr:`reduce` is ``False``, returns a loss per\n                batch element instead and ignores :attr:`size_average`. Default: ``True``\n            reduction (str, optional): Specifies the reduction to apply to the output:\n                ``'none'`` | ``'mean'`` | ``'sum'``. ``'none'``: no reduction will be applied,\n                ``'mean'``: the sum of the output will be divided by the number of\n                elements in the output, ``'sum'``: the output will be summed. Note: :attr:`size_average`\n                and :attr:`reduce` are in the process of being deprecated, and in the meantime,\n                specifying either of those two args will override :attr:`reduction`. Default: ``'mean'``\n    \n        Examples::\n    \n            >>> input = torch.randn(3, 2, requires_grad=True)\n            >>> target = torch.rand(3, 2, requires_grad=False)\n            >>> loss = F.binary_cross_entropy(torch.sigmoid(input), target)\n            >>> loss.backward()\n        \"\"\"\n        if has_torch_function_variadic(input, target, weight):\n            return handle_torch_function(\n                binary_cross_entropy,\n                (input, target, weight),\n                input,\n                target,\n                weight=weight,\n                size_average=size_average,\n                reduce=reduce,\n                reduction=reduction,\n            )\n        if size_average is not None or reduce is not None:\n            reduction_enum = _Reduction.legacy_get_enum(size_average, reduce)\n        else:\n            reduction_enum = _Reduction.get_enum(reduction)\n        if target.size() != input.size():\n>           raise ValueError(\n                f\"Using a target size ({target.size()}) that is different to the input size ({input.size()}) is deprecated. \"\n                \"Please ensure they have the same size.\"\n            )\nE           ValueError: Using a target size (torch.Size([4])) that is different to the input size (<MagicMock name='mock.model().squeeze().size()' id='4929479744'>) is deprecated. Please ensure they have the same size.\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/nn/functional.py:3560: ValueError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.787912+05:30", "timestamp": 1746268151.787912}}}
{"text": "2025-05-03 15:59:11.824 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.383244", "seconds": 1.383244}, "exception": null, "extra": {"passed": 14, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31496, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:11.824461+05:30", "timestamp": 1746268151.824461}}}
{"text": "2025-05-03 15:59:49.017 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.500925", "seconds": 0.500925}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31625, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:49.017106+05:30", "timestamp": 1746268189.017106}}}
{"text": "2025-05-03 15:59:49.197 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.681253", "seconds": 0.681253}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31625, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:49.197434+05:30", "timestamp": 1746268189.197434}}}
{"text": "2025-05-03 15:59:49.644 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.128749", "seconds": 1.128749}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 1, "passed": 0, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.6719591617584229, "failed_tests": [{"name": "tests/unit/miner/test_train.py::TestModelTraining::test_train_model", "duration": 0.05512120800267439, "error_message": "self = <test_train.TestModelTraining object at 0x1375f7f10>\nmock_adam = <MagicMock name='Adam' id='5223960720'>\nmock_dataloader = <MagicMock name='DataLoader' id='5223696512'>\nsample_dataset = (array([[0.37454012, 0.95071431, 0.73199394, 0.59865848, 0.15601864,\n        0.15599452, 0.05808361, 0.86617615, 0.601...34080354,\n        0.93075733, 0.85841275, 0.42899403, 0.75087107, 0.75454287]]), array([0, 1, 0, 0, 1, 1, 1, 0, 1, 0]))\n\n    @patch('torch.utils.data.DataLoader')\n    @patch('torch.optim.Adam')\n    def test_train_model(self, mock_adam, mock_dataloader, sample_dataset):\n        \"\"\"Test train_model function.\"\"\"\n        X_train, y_train = sample_dataset\n        X_val, y_val = sample_dataset  # Reuse for validation\n    \n        # Create mock miner with mock model\n        mock_miner = MagicMock()\n        mock_model = MagicMock()\n        mock_miner.model = mock_model\n    \n        # Configure the mock model to return a tensor with the right shape\n        # This is crucial to match the expected shape in BCELoss\n        sample_outputs = torch.rand(4)  # Shape matches batch size in sample_batch\n        mock_model.return_value = sample_outputs.unsqueeze(1)  # Add dimension that will be squeezed later\n    \n        # Mock DataLoader instances\n        mock_train_loader = MagicMock()\n        mock_val_loader = MagicMock()\n        mock_dataloader.side_effect = [mock_train_loader, mock_val_loader]\n    \n        # Mock optimizer\n        mock_optimizer = MagicMock()\n        mock_adam.return_value = mock_optimizer\n    \n        # Configure mock_train_loader to yield sample data\n        sample_batch = (torch.randn(4, 40), torch.randint(0, 2, (4,)).float())\n        mock_train_loader.__iter__.return_value = [sample_batch]\n        mock_train_loader.__len__.return_value = 1\n    \n        # Configure mock_val_loader to yield sample data\n        mock_val_loader.__iter__.return_value = [sample_batch]\n        mock_val_loader.__len__.return_value = 1\n    \n        # Call train_model\n>       history = train_model(\n            miner=mock_miner,\n            X_train=X_train,\n            y_train=y_train,\n            X_val=X_val,\n            y_val=y_val,\n            epochs=1,\n            batch_size=4,\n            learning_rate=0.001,\n            device=\"cpu\"\n        )\n\ntests/unit/miner/test_train.py:152: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/train.py:164: in train_model\n    loss.backward()\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/_tensor.py:648: in backward\n    torch.autograd.backward(\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/autograd/__init__.py:353: in backward\n    _engine_run_backward(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nt_outputs = (tensor(1.0249),), args = ((None,), False, False, ())\nkwargs = {'accumulate_grad': True, 'allow_unreachable': True}, attach_logging_hooks = False\n\n    def _engine_run_backward(\n        t_outputs: Sequence[Union[torch.Tensor, GradientEdge]],\n        *args: Any,\n        **kwargs: Any,\n    ) -> tuple[torch.Tensor, ...]:\n        attach_logging_hooks = log.getEffectiveLevel() <= logging.DEBUG\n        if attach_logging_hooks:\n            unregister_hooks = _register_logging_hooks_on_whole_graph(t_outputs)\n        try:\n>           return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\n                t_outputs, *args, **kwargs\n            )  # Calls into the C++ engine to run the backward pass\nE           RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/autograd/graph.py:824: RuntimeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31625, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:49.644930+05:30", "timestamp": 1746268189.64493}}}
{"text": "2025-05-03 15:59:49.683 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.167213", "seconds": 1.167213}, "exception": null, "extra": {"passed": 0, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31625, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 15:59:49.683394+05:30", "timestamp": 1746268189.683394}}}
{"text": "2025-05-03 16:00:17.948 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.461138", "seconds": 0.461138}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31734, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:17.948461+05:30", "timestamp": 1746268217.948461}}}
{"text": "2025-05-03 16:00:18.004 | INFO     | conversion_subnet.utils.log:info:112 - Epoch 1/1 - train_loss: 0.5000, train_acc: 0.5000, val_loss: 0.5000, val_acc: 0.5000\n", "record": {"elapsed": {"repr": "0:00:00.517179", "seconds": 0.517179}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Epoch 1/1 - train_loss: 0.5000, train_acc: 0.5000, val_loss: 0.5000, val_acc: 0.5000", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31734, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:18.004502+05:30", "timestamp": 1746268218.004502}}}
{"text": "2025-05-03 16:00:18.014 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.526887", "seconds": 0.526887}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31734, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:18.014210+05:30", "timestamp": 1746268218.01421}}}
{"text": "2025-05-03 16:00:18.383 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 0\n", "record": {"elapsed": {"repr": "0:00:00.895679", "seconds": 0.895679}, "exception": null, "extra": {"exitstatus": 0, "test_counts": {"total": 1, "passed": 1, "failed": 0, "skipped": 0, "errors": 0}, "duration": 0.4797399044036865}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 0", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31734, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:18.383002+05:30", "timestamp": 1746268218.383002}}}
{"text": "2025-05-03 16:00:18.383 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:00.896570", "seconds": 0.89657}, "exception": null, "extra": {"passed": 1, "failed": 0, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31734, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:18.383893+05:30", "timestamp": 1746268218.383893}}}
{"text": "2025-05-03 16:00:27.073 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.409862", "seconds": 0.409862}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.073548+05:30", "timestamp": 1746268227.073548}}}
{"text": "2025-05-03 16:00:27.078 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.414390", "seconds": 0.41439}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.078076+05:30", "timestamp": 1746268227.078076}}}
{"text": "2025-05-03 16:00:27.094 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.430992", "seconds": 0.430992}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.094678+05:30", "timestamp": 1746268227.094678}}}
{"text": "2025-05-03 16:00:27.101 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.437601", "seconds": 0.437601}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.101287+05:30", "timestamp": 1746268227.101287}}}
{"text": "2025-05-03 16:00:27.107 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.443316", "seconds": 0.443316}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.107002+05:30", "timestamp": 1746268227.107002}}}
{"text": "2025-05-03 16:00:27.111 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.447430", "seconds": 0.44743}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.111116+05:30", "timestamp": 1746268227.111116}}}
{"text": "2025-05-03 16:00:27.115 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.451757", "seconds": 0.451757}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.115443+05:30", "timestamp": 1746268227.115443}}}
{"text": "2025-05-03 16:00:27.120 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.456574", "seconds": 0.456574}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.120260+05:30", "timestamp": 1746268227.12026}}}
{"text": "2025-05-03 16:00:27.125 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.462165", "seconds": 0.462165}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.125851+05:30", "timestamp": 1746268227.125851}}}
{"text": "2025-05-03 16:00:27.127 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.464181", "seconds": 0.464181}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.127867+05:30", "timestamp": 1746268227.127867}}}
{"text": "2025-05-03 16:00:27.132 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.468854", "seconds": 0.468854}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.132540+05:30", "timestamp": 1746268227.13254}}}
{"text": "2025-05-03 16:00:27.207 | INFO     | conversion_subnet.utils.log:info:112 - Epoch 1/1 - train_loss: 0.5000, train_acc: 0.2500, val_loss: 0.5000, val_acc: 0.2500\n", "record": {"elapsed": {"repr": "0:00:00.544022", "seconds": 0.544022}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Epoch 1/1 - train_loss: 0.5000, train_acc: 0.2500, val_loss: 0.5000, val_acc: 0.2500", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.207708+05:30", "timestamp": 1746268227.207708}}}
{"text": "2025-05-03 16:00:27.214 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-6/test_save_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.551152", "seconds": 0.551152}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-6/test_save_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.214838+05:30", "timestamp": 1746268227.214838}}}
{"text": "2025-05-03 16:00:27.217 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-6/test_load_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.553643", "seconds": 0.553643}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-6/test_load_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.217329+05:30", "timestamp": 1746268227.217329}}}
{"text": "2025-05-03 16:00:27.396 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.732822", "seconds": 0.732822}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.396508+05:30", "timestamp": 1746268227.396508}}}
{"text": "2025-05-03 16:00:27.850 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.186507", "seconds": 1.186507}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 16, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.8382949829101562, "failed_tests": [{"name": "tests/unit/miner/test_train.py::TestModelTraining::test_load_model", "duration": 0.0029850420032744296, "error_message": "self = <test_train.TestModelTraining object at 0x132efe920>\ntmp_checkpoint_dir = PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-6/test_load_model0/checkpoints')\n\n    def test_load_model(self, tmp_checkpoint_dir):\n        \"\"\"Test load_model function.\"\"\"\n        # Create mock miner with mock model\n        mock_miner = MagicMock()\n        mock_model = MagicMock()\n        mock_miner.model = mock_model\n    \n        # Mock state_dict to return a dictionary\n        mock_model.state_dict.return_value = {\"layer1.weight\": torch.randn(5, 5)}\n    \n        # Save a model first\n        save_model(mock_miner, tmp_checkpoint_dir, \"test_model.pt\")\n    \n        # Call load_model\n>       load_model(mock_miner, tmp_checkpoint_dir / \"test_model.pt\")\n\ntests/unit/miner/test_train.py:223: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/miner/train.py:253: in load_model\n    miner.model.load_state_dict(torch.load(checkpoint_path, map_location=miner.device))\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:1516: in load\n    return _load(\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2114: in _load\n    result = unpickler.load()\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/_weights_only_unpickler.py:532: in load\n    self.append(self.persistent_load(pid))\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2078: in persistent_load\n    typed_storage = load_tensor(\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/serialization.py:2049: in load_tensor\n    typed_storage = torch.storage.TypedStorage(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <[AttributeError(\"'torch.storage.TypedStorage' object has no attribute '_untyped_storage'\") raised in repr()] TypedStorage object at 0x133058f70>\ndevice = None, dtype = torch.float32, wrap_storage = <MagicMock name='mock.device()' id='5150912672'>\n_internal = True\n\n    def __init__(\n        self,\n        *args,\n        device=None,\n        dtype=None,\n        wrap_storage=None,\n        _internal=False,\n    ):\n        if not _internal:\n            _warn_typed_storage_removal()\n        arg_error_msg = (\n            \"TypedStorage.__init__ received an invalid combination \"\n            \"of arguments. Expected one of:\\n\"\n            \" * (*, torch.device device, torch.dtype dtype)\\n\"\n            \" * (int size, *, torch.device device, torch.dtype dtype)\\n\"\n            \" * (Sequence data, *, torch.device device, torch.dtype dtype)\\n\"\n            \" * (*, UntypedStorage wrap_storage, torch.dtype dtype)\"\n        )\n    \n        if wrap_storage is not None:\n            if len(args) != 0:\n                raise RuntimeError(\n                    arg_error_msg\n                    + \"\\nNo positional arguments should be given when using \"\n                    \"'wrap_storage'\"\n                )\n    \n            if dtype is None:\n                raise RuntimeError(\n                    arg_error_msg + \"\\nArgument 'dtype' must be specified\"\n                )\n    \n            if not isinstance(dtype, torch.dtype):\n                raise TypeError(\n                    arg_error_msg\n                    + f\"\\nArgument 'dtype' must be torch.dtype, not {type(dtype)}\"\n                )\n    \n            if device is not None:\n                raise RuntimeError(\n                    arg_error_msg\n                    + \"\\nArgument 'device' should not be specified when 'wrap_storage' is given\"\n                )\n    \n            self.dtype = dtype\n    \n            if not isinstance(wrap_storage, torch.UntypedStorage):\n>               raise TypeError(\n                    arg_error_msg\n                    + f\"\\nArgument 'wrap_storage' must be UntypedStorage, but got {type(wrap_storage)}\"\n                )\nE               TypeError: TypedStorage.__init__ received an invalid combination of arguments. Expected one of:\nE                * (*, torch.device device, torch.dtype dtype)\nE                * (int size, *, torch.device device, torch.dtype dtype)\nE                * (Sequence data, *, torch.device device, torch.dtype dtype)\nE                * (*, UntypedStorage wrap_storage, torch.dtype dtype)\nE               Argument 'wrap_storage' must be UntypedStorage, but got <class 'unittest.mock.MagicMock'>\n\n../../../../.local/share/virtualenvs/analytics_framework-X_C0rfF4/lib/python3.10/site-packages/torch/storage.py:827: TypeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.850193+05:30", "timestamp": 1746268227.850193}}}
{"text": "2025-05-03 16:00:27.887 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.223521", "seconds": 1.223521}, "exception": null, "extra": {"passed": 16, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31781, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:27.887207+05:30", "timestamp": 1746268227.887207}}}
{"text": "2025-05-03 16:00:53.525 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.571508", "seconds": 0.571508}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.525667+05:30", "timestamp": 1746268253.525667}}}
{"text": "2025-05-03 16:00:53.533 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.579518", "seconds": 0.579518}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.533677+05:30", "timestamp": 1746268253.533677}}}
{"text": "2025-05-03 16:00:53.549 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.595815", "seconds": 0.595815}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.549974+05:30", "timestamp": 1746268253.549974}}}
{"text": "2025-05-03 16:00:53.556 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.601952", "seconds": 0.601952}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.556111+05:30", "timestamp": 1746268253.556111}}}
{"text": "2025-05-03 16:00:53.561 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.607752", "seconds": 0.607752}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.561911+05:30", "timestamp": 1746268253.561911}}}
{"text": "2025-05-03 16:00:53.566 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.612094", "seconds": 0.612094}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.566253+05:30", "timestamp": 1746268253.566253}}}
{"text": "2025-05-03 16:00:53.570 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.616674", "seconds": 0.616674}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.570833+05:30", "timestamp": 1746268253.570833}}}
{"text": "2025-05-03 16:00:53.575 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.621636", "seconds": 0.621636}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.575795+05:30", "timestamp": 1746268253.575795}}}
{"text": "2025-05-03 16:00:53.580 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.626607", "seconds": 0.626607}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.580766+05:30", "timestamp": 1746268253.580766}}}
{"text": "2025-05-03 16:00:53.584 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.629911", "seconds": 0.629911}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.584070+05:30", "timestamp": 1746268253.58407}}}
{"text": "2025-05-03 16:00:53.588 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.634644", "seconds": 0.634644}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.588803+05:30", "timestamp": 1746268253.588803}}}
{"text": "2025-05-03 16:00:53.670 | INFO     | conversion_subnet.utils.log:info:112 - Epoch 1/1 - train_loss: 0.5000, train_acc: 0.7500, val_loss: 0.5000, val_acc: 0.7500\n", "record": {"elapsed": {"repr": "0:00:00.715955", "seconds": 0.715955}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Epoch 1/1 - train_loss: 0.5000, train_acc: 0.7500, val_loss: 0.5000, val_acc: 0.7500", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.670114+05:30", "timestamp": 1746268253.670114}}}
{"text": "2025-05-03 16:00:53.673 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-7/test_save_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.719110", "seconds": 0.71911}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-7/test_save_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.673269+05:30", "timestamp": 1746268253.673269}}}
{"text": "2025-05-03 16:00:53.748 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.794449", "seconds": 0.794449}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:53.748608+05:30", "timestamp": 1746268253.748608}}}
{"text": "2025-05-03 16:00:54.132 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.178801", "seconds": 1.178801}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 15, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.6914658546447754, "failed_tests": [{"name": "tests/unit/miner/test_train.py::TestModelTraining::test_save_model", "duration": 0.0018334159976802766, "error_message": "self = <test_train.TestModelTraining object at 0x1380fece0>\nmock_save = <MagicMock name='save' id='5234800576'>\ntmp_checkpoint_dir = PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-7/test_save_model0/checkpoints')\n\n    @patch('torch.save')\n    def test_save_model(self, mock_save, tmp_checkpoint_dir):\n        \"\"\"Test save_model function.\"\"\"\n        # Create mock miner with mock model\n        mock_miner = MagicMock()\n        mock_model = MagicMock()\n        mock_miner.model = mock_model\n    \n        # Mock state_dict to return a dictionary\n        mock_model.state_dict.return_value = {\"layer1.weight\": torch.randn(5, 5)}\n    \n        # Call save_model\n        save_model(mock_miner, tmp_checkpoint_dir, \"test_model.pt\")\n    \n        # Check that the file was created\n>       assert (tmp_checkpoint_dir / \"test_model.pt\").exists()\nE       AssertionError: assert False\nE        +  where False = exists()\nE        +    where exists = (PosixPath('/private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-7/test_save_model0/checkpoints') / 'test_model.pt').exists\n\ntests/unit/miner/test_train.py:205: AssertionError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:54.132960+05:30", "timestamp": 1746268254.13296}}}
{"text": "2025-05-03 16:00:54.166 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.212640", "seconds": 1.21264}, "exception": null, "extra": {"passed": 15, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31895, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:00:54.166799+05:30", "timestamp": 1746268254.166799}}}
{"text": "2025-05-03 16:01:19.958 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.501052", "seconds": 0.501052}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:19.958685+05:30", "timestamp": 1746268279.958685}}}
{"text": "2025-05-03 16:01:19.963 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.505937", "seconds": 0.505937}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:19.963570+05:30", "timestamp": 1746268279.96357}}}
{"text": "2025-05-03 16:01:19.979 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.522002", "seconds": 0.522002}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:19.979635+05:30", "timestamp": 1746268279.979635}}}
{"text": "2025-05-03 16:01:19.986 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.528671", "seconds": 0.528671}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:19.986304+05:30", "timestamp": 1746268279.986304}}}
{"text": "2025-05-03 16:01:19.992 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.534908", "seconds": 0.534908}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:19.992541+05:30", "timestamp": 1746268279.992541}}}
{"text": "2025-05-03 16:01:19.996 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.539187", "seconds": 0.539187}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:19.996820+05:30", "timestamp": 1746268279.99682}}}
{"text": "2025-05-03 16:01:20.001 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.543430", "seconds": 0.54343}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.001063+05:30", "timestamp": 1746268280.001063}}}
{"text": "2025-05-03 16:01:20.005 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.548087", "seconds": 0.548087}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.005720+05:30", "timestamp": 1746268280.00572}}}
{"text": "2025-05-03 16:01:20.010 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.553245", "seconds": 0.553245}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.010878+05:30", "timestamp": 1746268280.010878}}}
{"text": "2025-05-03 16:01:20.012 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.554525", "seconds": 0.554525}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.012158+05:30", "timestamp": 1746268280.012158}}}
{"text": "2025-05-03 16:01:20.016 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.559343", "seconds": 0.559343}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.016976+05:30", "timestamp": 1746268280.016976}}}
{"text": "2025-05-03 16:01:20.089 | INFO     | conversion_subnet.utils.log:info:112 - Epoch 1/1 - train_loss: 0.5000, train_acc: 0.5000, val_loss: 0.5000, val_acc: 0.5000\n", "record": {"elapsed": {"repr": "0:00:00.632292", "seconds": 0.632292}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Epoch 1/1 - train_loss: 0.5000, train_acc: 0.5000, val_loss: 0.5000, val_acc: 0.5000", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.089925+05:30", "timestamp": 1746268280.089925}}}
{"text": "2025-05-03 16:01:20.093 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-8/test_save_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.635430", "seconds": 0.63543}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-8/test_save_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.093063+05:30", "timestamp": 1746268280.093063}}}
{"text": "2025-05-03 16:01:20.095 | INFO     | conversion_subnet.utils.log:info:112 - Loaded model checkpoint from /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-8/test_load_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.638112", "seconds": 0.638112}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Loaded model checkpoint from /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-8/test_load_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.095745+05:30", "timestamp": 1746268280.095745}}}
{"text": "2025-05-03 16:01:20.116 | ERROR    | conversion_subnet.utils.log:error:130 - Missing required features: ['session_id']\n", "record": {"elapsed": {"repr": "0:00:00.659305", "seconds": 0.659305}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Missing required features: ['session_id']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.116938+05:30", "timestamp": 1746268280.116938}}}
{"text": "2025-05-03 16:01:20.117 | ERROR    | conversion_subnet.utils.log:error:130 - Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']\n", "record": {"elapsed": {"repr": "0:00:00.660306", "seconds": 0.660306}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.117939+05:30", "timestamp": 1746268280.117939}}}
{"text": "2025-05-03 16:01:20.119 | WARNING  | conversion_subnet.utils.log:warning:124 - Feature hour_of_day could not be converted to float\n", "record": {"elapsed": {"repr": "0:00:00.662346", "seconds": 0.662346}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "warning", "level": {"icon": "⚠️", "name": "WARNING", "no": 30}, "line": 124, "message": "Feature hour_of_day could not be converted to float", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.119979+05:30", "timestamp": 1746268280.119979}}}
{"text": "2025-05-03 16:01:20.264 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.807030", "seconds": 0.80703}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.264663+05:30", "timestamp": 1746268280.264663}}}
{"text": "2025-05-03 16:01:20.717 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.259721", "seconds": 1.259721}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 36, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.8461349010467529, "failed_tests": [{"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.0032873340023797937, "error_message": "self = <test_forward.TestForward object at 0x125752440>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    @pytest.mark.asyncio\n    async def test_forward(self, sample_features):\n        \"\"\"Test the main forward function.\"\"\"\n        # Create a mock response\n        response = ConversionSynapse(\n            features=sample_features,\n            prediction={'conversion_happened': 1, 'time_to_conversion_seconds': 70.0},\n            confidence=0.8,\n            response_time=0.0,\n            miner_uid=0\n        )\n    \n        # Create our own validator instance\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.dendrite.query = AsyncMock(return_value=[response])\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n    \n        # Override behavior with a simple test\n        with patch('conversion_subnet.utils.uids.get_random_uids', return_value=[0]):\n            with patch('conversion_subnet.validator.generate.generate_conversation', return_value=sample_features):\n                with patch('conversion_subnet.validator.utils.validate_features', return_value=sample_features):\n>                   with patch('conversion_subnet.validator.forward.generate_ground_truth', return_value={'conversion_happened': 1, 'time_to_conversion_seconds': 60.0}):\n\ntests/unit/validator/test_forward.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x125894460>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x122980b80> does not have the attribute 'generate_ground_truth'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.717354+05:30", "timestamp": 1746268280.717354}}}
{"text": "2025-05-03 16:01:20.754 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.296569", "seconds": 1.296569}, "exception": null, "extra": {"passed": 36, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 31997, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:20.754202+05:30", "timestamp": 1746268280.754202}}}
{"text": "2025-05-03 16:01:52.019 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.484467", "seconds": 0.484467}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.019719+05:30", "timestamp": 1746268312.019719}}}
{"text": "2025-05-03 16:01:52.024 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.489590", "seconds": 0.48959}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.024842+05:30", "timestamp": 1746268312.024842}}}
{"text": "2025-05-03 16:01:52.040 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.505605", "seconds": 0.505605}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.040857+05:30", "timestamp": 1746268312.040857}}}
{"text": "2025-05-03 16:01:52.047 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.512491", "seconds": 0.512491}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.047743+05:30", "timestamp": 1746268312.047743}}}
{"text": "2025-05-03 16:01:52.053 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.518313", "seconds": 0.518313}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.053565+05:30", "timestamp": 1746268312.053565}}}
{"text": "2025-05-03 16:01:52.057 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.522746", "seconds": 0.522746}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.057998+05:30", "timestamp": 1746268312.057998}}}
{"text": "2025-05-03 16:01:52.062 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.527278", "seconds": 0.527278}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.062530+05:30", "timestamp": 1746268312.06253}}}
{"text": "2025-05-03 16:01:52.067 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.532555", "seconds": 0.532555}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.067807+05:30", "timestamp": 1746268312.067807}}}
{"text": "2025-05-03 16:01:52.073 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.537777", "seconds": 0.537777}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.073029+05:30", "timestamp": 1746268312.073029}}}
{"text": "2025-05-03 16:01:52.074 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.539253", "seconds": 0.539253}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.074505+05:30", "timestamp": 1746268312.074505}}}
{"text": "2025-05-03 16:01:52.078 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.543709", "seconds": 0.543709}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.078961+05:30", "timestamp": 1746268312.078961}}}
{"text": "2025-05-03 16:01:52.104 | INFO     | conversion_subnet.utils.log:info:112 - Epoch 1/1 - train_loss: 0.5000, train_acc: 0.2500, val_loss: 0.5000, val_acc: 0.2500\n", "record": {"elapsed": {"repr": "0:00:00.569172", "seconds": 0.569172}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Epoch 1/1 - train_loss: 0.5000, train_acc: 0.2500, val_loss: 0.5000, val_acc: 0.2500", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.104424+05:30", "timestamp": 1746268312.104424}}}
{"text": "2025-05-03 16:01:52.107 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-9/test_save_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.572017", "seconds": 0.572017}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-9/test_save_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.107269+05:30", "timestamp": 1746268312.107269}}}
{"text": "2025-05-03 16:01:52.110 | INFO     | conversion_subnet.utils.log:info:112 - Loaded model checkpoint from /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-9/test_load_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.575240", "seconds": 0.57524}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Loaded model checkpoint from /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-9/test_load_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.110492+05:30", "timestamp": 1746268312.110492}}}
{"text": "2025-05-03 16:01:52.178 | ERROR    | conversion_subnet.utils.log:error:130 - Missing required features: ['session_id']\n", "record": {"elapsed": {"repr": "0:00:00.643316", "seconds": 0.643316}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Missing required features: ['session_id']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.178568+05:30", "timestamp": 1746268312.178568}}}
{"text": "2025-05-03 16:01:52.180 | ERROR    | conversion_subnet.utils.log:error:130 - Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']\n", "record": {"elapsed": {"repr": "0:00:00.644760", "seconds": 0.64476}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.180012+05:30", "timestamp": 1746268312.180012}}}
{"text": "2025-05-03 16:01:52.181 | WARNING  | conversion_subnet.utils.log:warning:124 - Feature hour_of_day could not be converted to float\n", "record": {"elapsed": {"repr": "0:00:00.646598", "seconds": 0.646598}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "warning", "level": {"icon": "⚠️", "name": "WARNING", "no": 30}, "line": 124, "message": "Feature hour_of_day could not be converted to float", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.181850+05:30", "timestamp": 1746268312.18185}}}
{"text": "2025-05-03 16:01:52.269 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.734230", "seconds": 0.73423}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.269482+05:30", "timestamp": 1746268312.269482}}}
{"text": "2025-05-03 16:01:52.627 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:01.092202", "seconds": 1.092202}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 52, "passed": 36, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.6832008361816406, "failed_tests": [{"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.006612500001210719, "error_message": "self = <test_forward.TestForward object at 0x12c0c3490>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    @pytest.mark.asyncio\n    async def test_forward(self, sample_features):\n        \"\"\"Test the main forward function.\"\"\"\n        # Create a mock response\n        response = ConversionSynapse(\n            features=sample_features,\n            prediction={'conversion_happened': 1, 'time_to_conversion_seconds': 70.0},\n            confidence=0.8,\n            response_time=0.0,\n            miner_uid=0\n        )\n    \n        # Create our own validator instance\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.dendrite.query = AsyncMock(return_value=[response])\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n    \n        # Mock generate_ground_truth directly in the current module's namespace\n        # instead of trying to patch it from conversion_subnet.validator.forward\n        mock_ground_truth = {'conversion_happened': 1, 'time_to_conversion_seconds': 60.0}\n    \n        # Override behavior with a simple test\n        with patch('conversion_subnet.utils.uids.get_random_uids', return_value=[0]):\n            with patch('conversion_subnet.validator.generate.generate_conversation', return_value=sample_features):\n                with patch('conversion_subnet.validator.utils.validate_features', return_value=sample_features):\n                    with patch(__name__ + '.generate_ground_truth', return_value=mock_ground_truth):\n                        # Call the forward function\n>                       await forward(validator)\n\ntests/unit/validator/test_forward.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconversion_subnet/validator/forward.py:28: in forward\n    miner_uids = get_random_uids(self, k=sample_size)\nconversion_subnet/utils/uids.py:45: in get_random_uids\n    uid_is_available = check_uid_availability(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmetagraph = <MagicMock name='mock.metagraph' id='5033724464'>, uid = 0\nvpermit_tao_limit = <MagicMock name='mock.config.neuron.vpermit_tao_limit' id='5034720992'>\n\n    def check_uid_availability(\n        metagraph: \"bt.metagraph.Metagraph\", uid: int, vpermit_tao_limit: int\n    ) -> bool:\n        \"\"\"Check if uid is available. The UID should be available if it is serving and has less than vpermit_tao_limit stake\n        Args:\n            metagraph (:obj: bt.metagraph.Metagraph): Metagraph object\n            uid (int): uid to be checked\n            vpermit_tao_limit (int): Validator permit tao limit\n        Returns:\n            bool: True if uid is available, False otherwise\n        \"\"\"\n        # Filter non serving axons.\n        if not metagraph.axons[uid].is_serving:\n            return False\n        # Filter validator permit > 1024 stake.\n        if metagraph.validator_permit[uid]:\n>           if metagraph.S[uid] > vpermit_tao_limit:\nE           TypeError: '>' not supported between instances of 'MagicMock' and 'MagicMock'\n\nconversion_subnet/utils/uids.py:23: TypeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.627454+05:30", "timestamp": 1746268312.627454}}}
{"text": "2025-05-03 16:01:52.721 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.185824", "seconds": 1.185824}, "exception": null, "extra": {"passed": 36, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32124, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:01:52.721076+05:30", "timestamp": 1746268312.721076}}}
{"text": "2025-05-03 16:02:30.420 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.385143", "seconds": 0.385143}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32253, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:02:30.420387+05:30", "timestamp": 1746268350.420387}}}
{"text": "2025-05-03 16:02:30.615 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.580582", "seconds": 0.580582}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32253, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:02:30.615826+05:30", "timestamp": 1746268350.615826}}}
{"text": "2025-05-03 16:02:30.980 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 1\n", "record": {"elapsed": {"repr": "0:00:00.945097", "seconds": 0.945097}, "exception": null, "extra": {"exitstatus": 1, "test_counts": {"total": 1, "passed": 0, "failed": 1, "skipped": 0, "errors": 0}, "duration": 0.59657883644104, "failed_tests": [{"name": "tests/unit/validator/test_forward.py::TestForward::test_forward", "duration": 0.002739584000664763, "error_message": "self = <test_forward.TestForward object at 0x1274f1ab0>\nsample_features = {'agent_messages_count': 7, 'avg_agent_response_time_seconds': 7.5, 'avg_entity_confidence': 0.87, 'avg_message_length_agent': 55.6, ...}\n\n    @pytest.mark.asyncio\n    async def test_forward(self, sample_features):\n        \"\"\"Test the main forward function.\"\"\"\n        # Create a mock response\n        response = ConversionSynapse(\n            features=sample_features,\n            prediction={'conversion_happened': 1, 'time_to_conversion_seconds': 70.0},\n            confidence=0.8,\n            response_time=0.0,\n            miner_uid=0\n        )\n    \n        # Create our own validator instance\n        validator = MagicMock()\n        validator.dendrite = AsyncMock()\n        validator.dendrite.return_value = [response]\n        validator.update_scores = MagicMock()\n        validator.conversation_history = {}\n        validator.metagraph = MagicMock()\n        validator.metagraph.axons = [MagicMock()]\n    \n        # Mock ground truth for testing\n        mock_ground_truth = {'conversion_happened': 1, 'time_to_conversion_seconds': 60.0}\n    \n        # Create separate mocks for the validator reward class\n        mock_validator_reward = MagicMock()\n        mock_validator_reward.reward.return_value = 0.8  # Mock reward value\n    \n        # Simplified approach: Skip all the complex chaining by patching at a higher level\n>       with patch('conversion_subnet.validator.forward.get_random_uids', return_value=[0]):\n\ntests/unit/validator/test_forward.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x127548460>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <function forward at 0x124d80b80> does not have the attribute 'get_random_uids'\n\n../../../../.pyenv/versions/3.10.15/lib/python3.10/unittest/mock.py:1420: AttributeError"}]}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 1", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32253, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:02:30.980341+05:30", "timestamp": 1746268350.980341}}}
{"text": "2025-05-03 16:02:31.065 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.030216", "seconds": 1.030216}, "exception": null, "extra": {"passed": 0, "failed": 1, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32253, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:02:31.065460+05:30", "timestamp": 1746268351.06546}}}
{"text": "2025-05-03 16:03:00.077 | INFO     | conversion_subnet.utils.log:info:112 - Starting test session\n", "record": {"elapsed": {"repr": "0:00:00.425695", "seconds": 0.425695}, "exception": null, "extra": {"test_dir": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/test-results"}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Starting test session", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.077062+05:30", "timestamp": 1746268380.077062}}}
{"text": "2025-05-03 16:03:00.082 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.430757", "seconds": 0.430757}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.082124+05:30", "timestamp": 1746268380.082124}}}
{"text": "2025-05-03 16:03:00.098 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.447134", "seconds": 0.447134}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.098501+05:30", "timestamp": 1746268380.098501}}}
{"text": "2025-05-03 16:03:00.105 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.453694", "seconds": 0.453694}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.105061+05:30", "timestamp": 1746268380.105061}}}
{"text": "2025-05-03 16:03:00.111 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.459872", "seconds": 0.459872}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.111239+05:30", "timestamp": 1746268380.111239}}}
{"text": "2025-05-03 16:03:00.115 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.464212", "seconds": 0.464212}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=32, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=32, out_features=16, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=16, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.115579+05:30", "timestamp": 1746268380.115579}}}
{"text": "2025-05-03 16:03:00.119 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.468382", "seconds": 0.468382}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.119749+05:30", "timestamp": 1746268380.119749}}}
{"text": "2025-05-03 16:03:00.125 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.473862", "seconds": 0.473862}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.125229+05:30", "timestamp": 1746268380.125229}}}
{"text": "2025-05-03 16:03:00.130 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.479250", "seconds": 0.47925}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.130617+05:30", "timestamp": 1746268380.130617}}}
{"text": "2025-05-03 16:03:00.131 | ERROR    | conversion_subnet.utils.log:error:130 - Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)\n", "record": {"elapsed": {"repr": "0:00:00.480526", "seconds": 0.480526}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Error in forward: mat1 and mat2 shapes cannot be multiplied (1x0 and 40x16)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.131893+05:30", "timestamp": 1746268380.131893}}}
{"text": "2025-05-03 16:03:00.136 | INFO     | conversion_subnet.utils.log:info:112 - Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)\n", "record": {"elapsed": {"repr": "0:00:00.485416", "seconds": 0.485416}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Initialized binary classification miner with model: Sequential(\n  (0): Linear(in_features=40, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=32, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=32, out_features=1, bias=True)\n  (5): Sigmoid()\n)", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.136783+05:30", "timestamp": 1746268380.136783}}}
{"text": "2025-05-03 16:03:00.160 | INFO     | conversion_subnet.utils.log:info:112 - Epoch 1/1 - train_loss: 0.5000, train_acc: 0.5000, val_loss: 0.5000, val_acc: 0.5000\n", "record": {"elapsed": {"repr": "0:00:00.508870", "seconds": 0.50887}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Epoch 1/1 - train_loss: 0.5000, train_acc: 0.5000, val_loss: 0.5000, val_acc: 0.5000", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.160237+05:30", "timestamp": 1746268380.160237}}}
{"text": "2025-05-03 16:03:00.164 | INFO     | conversion_subnet.utils.log:info:112 - Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-10/test_save_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.512735", "seconds": 0.512735}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Saved model checkpoint to /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-10/test_save_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.164102+05:30", "timestamp": 1746268380.164102}}}
{"text": "2025-05-03 16:03:00.213 | INFO     | conversion_subnet.utils.log:info:112 - Loaded model checkpoint from /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-10/test_load_model0/checkpoints/test_model.pt\n", "record": {"elapsed": {"repr": "0:00:00.562255", "seconds": 0.562255}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Loaded model checkpoint from /private/var/folders/wg/544yksrd18q2wtz1fyftdm400000gn/T/pytest-of-admin/pytest-10/test_load_model0/checkpoints/test_model.pt", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.213622+05:30", "timestamp": 1746268380.213622}}}
{"text": "2025-05-03 16:03:00.234 | ERROR    | conversion_subnet.utils.log:error:130 - Missing required features: ['session_id']\n", "record": {"elapsed": {"repr": "0:00:00.583023", "seconds": 0.583023}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Missing required features: ['session_id']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.234390+05:30", "timestamp": 1746268380.23439}}}
{"text": "2025-05-03 16:03:00.235 | ERROR    | conversion_subnet.utils.log:error:130 - Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']\n", "record": {"elapsed": {"repr": "0:00:00.584594", "seconds": 0.584594}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "error", "level": {"icon": "❌", "name": "ERROR", "no": 40}, "line": 130, "message": "Feature type validation errors: ['has_target_entity must be 0 or 1, got not_an_int']", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.235961+05:30", "timestamp": 1746268380.235961}}}
{"text": "2025-05-03 16:03:00.237 | WARNING  | conversion_subnet.utils.log:warning:124 - Feature hour_of_day could not be converted to float\n", "record": {"elapsed": {"repr": "0:00:00.586269", "seconds": 0.586269}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "warning", "level": {"icon": "⚠️", "name": "WARNING", "no": 30}, "line": 124, "message": "Feature hour_of_day could not be converted to float", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.237636+05:30", "timestamp": 1746268380.237636}}}
{"text": "2025-05-03 16:03:00.256 | INFO     | conversion_subnet.utils.log:info:112 - Test session completed\n", "record": {"elapsed": {"repr": "0:00:00.605451", "seconds": 0.605451}, "exception": null, "extra": {}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session completed", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.256818+05:30", "timestamp": 1746268380.256818}}}
{"text": "2025-05-03 16:03:00.652 | INFO     | conversion_subnet.utils.log:info:112 - Test session finished with exit status 0\n", "record": {"elapsed": {"repr": "0:00:01.000640", "seconds": 1.00064}, "exception": null, "extra": {"exitstatus": 0, "test_counts": {"total": 52, "passed": 52, "failed": 0, "skipped": 0, "errors": 0}, "duration": 0.6544220447540283}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session finished with exit status 0", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.652007+05:30", "timestamp": 1746268380.652007}}}
{"text": "2025-05-03 16:03:00.653 | INFO     | conversion_subnet.utils.log:info:112 - Test session summary\n", "record": {"elapsed": {"repr": "0:00:01.001857", "seconds": 1.001857}, "exception": null, "extra": {"passed": 52, "failed": 0, "skipped": 0, "error": 0}, "file": {"name": "log.py", "path": "/Users/admin/Documents/PersonalProjects/bittensor/analytics_framework/conversion_subnet/utils/log.py"}, "function": "info", "level": {"icon": "ℹ️", "name": "INFO", "no": 20}, "line": 112, "message": "Test session summary", "module": "log", "name": "conversion_subnet.utils.log", "process": {"id": 32356, "name": "MainProcess"}, "thread": {"id": 8481721472, "name": "MainThread"}, "time": {"repr": "2025-05-03 16:03:00.653224+05:30", "timestamp": 1746268380.653224}}}
